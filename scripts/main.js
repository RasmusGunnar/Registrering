const CAL_B64 = [
  'PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImRhIj4KPGhlYWQ+CiAgPG1ldGEgY2hhcnNldD0idXRmLTgiPgogIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBj',
  'b250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSI+CiAgPHRpdGxlPkZhbWlsaWVvdmVyc2lndDwvdGl0bGU+CiAgPHN0eWxlPgog',
  'ICAgOnJvb3QgewogICAgICBjb2xvci1zY2hlbWU6IGRhcms7CiAgICAgIC0tYmc6ICMwZjE3MmE7CiAgICAgIC0tcGFuZWw6ICMxMTFjMmY7CiAgICAgIC0t',
  'cGFuZWwtYm9yZGVyOiByZ2JhKDE0OCwgMTYzLCAxODQsIDAuMTgpOwogICAgICAtLXBhbmVsLWJvcmRlci1zdHJvbmc6IHJnYmEoMTQ4LCAxNjMsIDE4NCwg',
  'MC4zNSk7CiAgICAgIC0tdGV4dDogI2Y4ZmFmYzsKICAgICAgLS1tdXRlZDogcmdiYSgyMjYsIDIzMiwgMjQwLCAwLjcpOwogICAgICAtLWFjY2VudDogIzM4',
  'YmRmODsKICAgICAgLS1kYW5nZXI6ICNmODcxNzE7CiAgICAgIC0tc3VjY2VzczogIzRhZGU4MDsKICAgICAgZm9udC1mYW1pbHk6ICdTZWdvZSBVSScsIHN5',
  'c3RlbS11aSwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBzYW5zLXNlcmlmOwogICAgfQoKICAgICosICo6OmJlZm9yZSwgKjo6YWZ0ZXIg',
  'ewogICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogICAgfQoKICAgIGJvZHkgewogICAgICBtYXJnaW46IDA7CiAgICAgIG1pbi1oZWlnaHQ6IDEwMHZo',
  'OwogICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTUwZGVnLCAjMDIwNjE3LCAjMGYxNzJhIDcwJSwgIzAyMDYxNyk7CiAgICAgIGNvbG9yOiB2',
  'YXIoLS10ZXh0KTsKICAgICAgcGFkZGluZzogMS41cmVtOwogICAgfQoKICAgIC5sYXlvdXQgewogICAgICBtYXgtd2lkdGg6IDExMDBweDsKICAgICAgbWFy',
  'Z2luOiAwIGF1dG87CiAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgICAgIGdhcDogMS41cmVtOwogICAgfQoK',
  'ICAgIGhlYWRlciB7CiAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2Ut',
  'YmV0d2VlbjsKICAgICAgZ2FwOiAxcmVtOwogICAgICBmbGV4LXdyYXA6IHdyYXA7CiAgICB9CgogICAgaDEgewogICAgICBtYXJnaW46IDA7CiAgICAgIGZv',
  'bnQtc2l6ZTogY2xhbXAoMS42cmVtLCAzdncsIDJyZW0pOwogICAgfQoKICAgIC53ZWVrLWFjdGlvbnMgewogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBn',
  'YXA6IDAuNXJlbTsKICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgICAgZmxleC13cmFwOiB3cmFwOwogICAgfQoKICAgIGJ1dHRvbiwKICAgIGlucHV0',
  'LAogICAgc2VsZWN0LAogICAgdGV4dGFyZWEgewogICAgICBmb250OiBpbmhlcml0OwogICAgfQoKICAgIC5idG4gewogICAgICBib3JkZXI6IDFweCBzb2xp',
  'ZCByZ2JhKDE0OCwgMTYzLCAxODQsIDAuNCk7CiAgICAgIGJhY2tncm91bmQ6IHJnYmEoMTUsIDIzLCA0MiwgMC42KTsKICAgICAgY29sb3I6IHZhcigtLXRl',
  'eHQpOwogICAgICBwYWRkaW5nOiAwLjVyZW0gMS4xcmVtOwogICAgICBib3JkZXItcmFkaXVzOiAxMnB4OwogICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAg',
  'IGRpc3BsYXk6IGlubGluZS1mbGV4OwogICAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgICBnYXA6IDAuMzVyZW07CiAgICAgIHRyYW5zaXRpb246IGJv',
  'cmRlci1jb2xvciAwLjJzIGVhc2UsIGJhY2tncm91bmQgMC4ycyBlYXNlLCB0cmFuc2Zvcm0gMC4ycyBlYXNlOwogICAgfQoKICAgIC5idG46aG92ZXIgewog',
  'ICAgICBib3JkZXItY29sb3I6IHZhcigtLWFjY2VudCk7CiAgICAgIGJhY2tncm91bmQ6IHJnYmEoNTYsIDE4OSwgMjQ4LCAwLjE2KTsKICAgIH0KCiAgICAu',
  'YnRuLnByaW1hcnkgewogICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50OwogICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCBy',
  'Z2JhKDU2LCAxODksIDI0OCwgMC45NSksIHJnYmEoMTQsIDE2NSwgMjMzLCAwLjgpKTsKICAgICAgY29sb3I6ICMwNDEwMWQ7CiAgICAgIGZvbnQtd2VpZ2h0',
  'OiA2MDA7CiAgICB9CgogICAgLmJ0bi5wcmltYXJ5OmhvdmVyIHsKICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xcHgpOwogICAgICBiYWNrZ3JvdW5k',
  'OiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCByZ2JhKDU2LCAxODksIDI0OCwgMSksIHJnYmEoMTQsIDE2NSwgMjMzLCAwLjk1KSk7CiAgICB9CgogICAgLmJ0',
  'bi5pY29uIHsKICAgICAgd2lkdGg6IDM0cHg7CiAgICAgIGhlaWdodDogMzRweDsKICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgICAgIHBhZGRp',
  'bmc6IDA7CiAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTsKICAgIH0KCiAgICAucGVvcGxlLWJhciB7CiAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgIGdhcDog',
  'MC43NXJlbTsKICAgICAgb3ZlcmZsb3cteDogYXV0bzsKICAgICAgcGFkZGluZy1ib3R0b206IDAuNXJlbTsKICAgIH0KCiAgICAuY2hpcCB7CiAgICAgIGZs',
  'ZXg6IDAgMCBhdXRvOwogICAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDsKICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgICAgZ2FwOiAwLjRyZW07CiAg',
  'ICAgIHBhZGRpbmc6IDAuNDVyZW0gMC45cmVtOwogICAgICBib3JkZXItcmFkaXVzOiA5OTlweDsKICAgICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJl',
  'bnQ7CiAgICAgIGJhY2tncm91bmQ6IHJnYmEoMTUsIDIzLCA0MiwgMC41NSk7CiAgICAgIGNvbG9yOiBpbmhlcml0OwogICAgICBjdXJzb3I6IHBvaW50ZXI7',
  'CiAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjJzIGVhc2UsIGJvcmRlci1jb2xvciAwLjJzIGVhc2UsIGJhY2tncm91bmQgMC4ycyBlYXNlOwogICAg',
  'fQoKICAgIC5jaGlwLmFjdGl2ZSB7CiAgICAgIGJvcmRlci1jb2xvcjogY3VycmVudENvbG9yOwogICAgICBiYWNrZ3JvdW5kOiByZ2JhKDU2LCAxODksIDI0',
  'OCwgMC4xOCk7CiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMnB4KTsKICAgIH0KCiAgICAuY2hpcC1hdmF0YXIgewogICAgICB3aWR0aDogMjZweDsK',
  'ICAgICAgaGVpZ2h0OiAyNnB4OwogICAgICBib3JkZXItcmFkaXVzOiA1MCU7CiAgICAgIGRpc3BsYXk6IGdyaWQ7CiAgICAgIHBsYWNlLWl0ZW1zOiBjZW50',
  'ZXI7CiAgICAgIGZvbnQtc2l6ZTogMC44NXJlbTsKICAgICAgZm9udC13ZWlnaHQ6IDYwMDsKICAgICAgY29sb3I6ICMwMjA2MTc7CiAgICB9CgogICAgLmNo',
  'aXAgc3BhbiB7CiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7CiAgICB9CgogICAgLndlZWstZ3JpZCB7CiAgICAgIGRpc3BsYXk6IGdyaWQ7CiAgICAgIGdy',
  'aWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDcsIG1pbm1heCgwLCAxZnIpKTsKICAgICAgZ2FwOiAxcmVtOwogICAgfQoKICAgIC5kYXkgewogICAgICBi',
  'YWNrZ3JvdW5kOiByZ2JhKDE1LCAyMywgNDIsIDAuNyk7CiAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLXBhbmVsLWJvcmRlcik7CiAgICAgIGJvcmRl',
  'ci1yYWRpdXM6IDE4cHg7CiAgICAgIHBhZGRpbmc6IDFyZW07CiAgICAgIG1pbi1oZWlnaHQ6IDI2MHB4OwogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBm',
  'bGV4LWRpcmVjdGlvbjogY29sdW1uOwogICAgICBnYXA6IDAuNzVyZW07CiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgICAgdHJhbnNpdGlvbjogYm9y',
  'ZGVyLWNvbG9yIDAuMnMgZWFzZSwgdHJhbnNmb3JtIDAuMnMgZWFzZTsKICAgIH0KCiAgICAuZGF5OmhvdmVyIHsKICAgICAgYm9yZGVyLWNvbG9yOiB2YXIo',
  'LS1wYW5lbC1ib3JkZXItc3Ryb25nKTsKICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0ycHgpOwogICAgfQoKICAgIC5kYXktaGVhZGVyIHsKICAgICAg',
  'ZGlzcGxheTogZmxleDsKICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogICAgICBhbGlnbi1pdGVtczogYmFzZWxpbmU7CiAgICAgIGdh',
  'cDogMC41cmVtOwogICAgICBmb250LXdlaWdodDogNjAwOwogICAgfQoKICAgIC5kYXktZGF0ZSB7CiAgICAgIGNvbG9yOiB2YXIoLS1tdXRlZCk7CiAgICAg',
  'IGZvbnQtc2l6ZTogMC45cmVtOwogICAgfQoKICAgIC5pdGVtcyB7CiAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47',
  'CiAgICAgIGdhcDogMC42cmVtOwogICAgICBmbGV4OiAxOwogICAgfQoKICAgIC5pdGVtIHsKICAgICAgZGlzcGxheTogZmxleDsKICAgICAgZmxleC1kaXJl',
  'Y3Rpb246IGNvbHVtbjsKICAgICAgZ2FwOiAwLjM1cmVtOwogICAgICBib3JkZXItcmFkaXVzOiAxNHB4OwogICAgICBwYWRkaW5nOiAwLjc1cmVtOwogICAg',
  'ICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDsKICAgICAgYmFja2dyb3VuZDogcmdiYSgxNSwgMjMsIDQyLCAwLjQ1KTsKICAgICAgcG9zaXRpb246',
  'IHJlbGF0aXZlOwogICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjJzIGVhc2UsIGJvcmRlci1jb2xvciAwLjJz',
  'IGVhc2U7CiAgICB9CgogICAgLml0ZW06aG92ZXIgewogICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTFweCk7CiAgICAgIGJvcmRlci1jb2xvcjogcmdi',
  'YSgyNDgsIDI1MCwgMjUyLCAwLjMpOwogICAgfQoKICAgIC5pdGVtOjpiZWZvcmUgewogICAgICBjb250ZW50OiAiIjsKICAgICAgcG9zaXRpb246IGFic29s',
  'dXRlOwogICAgICBpbnNldDogMDsKICAgICAgYm9yZGVyLXJhZGl1czogMTRweDsKICAgICAgb3BhY2l0eTogMC4xODsKICAgICAgcG9pbnRlci1ldmVudHM6',
  'IG5vbmU7CiAgICB9CgogICAgLml0ZW0tdG9wIHsKICAgICAgZGlzcGxheTogZmxleDsKICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwog',
  'ICAgICBhbGlnbi1pdGVtczogYmFzZWxpbmU7CiAgICAgIGdhcDogMC41cmVtOwogICAgICBmb250LXdlaWdodDogNjAwOwogICAgfQoKICAgIC5pdGVtLW1l',
  'dGEgewogICAgICBmb250LXNpemU6IDAuODVyZW07CiAgICAgIGNvbG9yOiB2YXIoLS1tdXRlZCk7CiAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgIGZsZXgt',
  'd3JhcDogd3JhcDsKICAgICAgZ2FwOiAwLjRyZW07CiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICB9CgogICAgLmJhZGdlIHsKICAgICAgZGlzcGxh',
  'eTogaW5saW5lLWZsZXg7CiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICAgIGdhcDogMC4zNXJlbTsKICAgICAgcGFkZGluZzogMC4ycmVtIDAuNTVy',
  'ZW07CiAgICAgIGJvcmRlci1yYWRpdXM6IDk5OXB4OwogICAgICBiYWNrZ3JvdW5kOiByZ2JhKDE1LCAyMywgNDIsIDAuNzUpOwogICAgICBib3JkZXI6IDFw',
  'eCBzb2xpZCByZ2JhKDE0OCwgMTYzLCAxODQsIDAuMjUpOwogICAgICBmb250LXNpemU6IDAuNzVyZW07CiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNh',
  'c2U7CiAgICAgIGxldHRlci1zcGFjaW5nOiAwLjA1ZW07CiAgICB9CgogICAgLmJhZGdlLmRvbmUgewogICAgICBib3JkZXItY29sb3I6IHJnYmEoNzQsIDIy',
  'MiwgMTI4LCAwLjYpOwogICAgICBjb2xvcjogdmFyKC0tc3VjY2Vzcyk7CiAgICB9CgogICAgLmZsb2F0aW5nLWNvbnRyb2xzIHsKICAgICAgcG9zaXRpb246',
  'IGZpeGVkOwogICAgICByaWdodDogY2xhbXAoMXJlbSwgM3Z3LCAycmVtKTsKICAgICAgYm90dG9tOiBjbGFtcCgxcmVtLCAzdncsIDJyZW0pOwogICAgICBi',
  'YWNrZ3JvdW5kOiByZ2JhKDE1LCAyMywgNDIsIDAuODUpOwogICAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1wYW5lbC1ib3JkZXIpOwogICAgICBib3Jk',
  'ZXItcmFkaXVzOiAxNnB4OwogICAgICBwYWRkaW5nOiAwLjhyZW07CiAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47',
  'CiAgICAgIGdhcDogMC41cmVtOwogICAgICB3aWR0aDogMjMwcHg7CiAgICAgIGJveC1zaGFkb3c6IDAgMjBweCA0NXB4IHJnYmEoMiwgNiwgMjMsIDAuNik7',
  'CiAgICB9CgogICAgLnN5bmMtYmFkZ2UgewogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgICBqdXN0aWZ5LWNv',
  'bnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgICAgIGdhcDogMC41cmVtOwogICAgICBmb250LXNpemU6IDAuODVyZW07CiAgICAgIGNvbG9yOiB2YXIoLS1tdXRl',
  'ZCk7CiAgICB9CgogICAgLnN5bmMtYWN0aW9ucyB7CiAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgIGdhcDogMC41cmVtOwogICAgICBmbGV4LXdyYXA6IHdy',
  'YXA7CiAgICB9CgogICAgLnN5bmMtYWN0aW9ucyAuYnRuIHsKICAgICAgZmxleDogMTsKICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgICAgIHBh',
  'ZGRpbmc6IDAuNDVyZW0gMC42cmVtOwogICAgfQoKICAgIC5tb2RhbC1iYWNrZHJvcCB7CiAgICAgIHBvc2l0aW9uOiBmaXhlZDsKICAgICAgaW5zZXQ6IDA7',
  'CiAgICAgIGJhY2tncm91bmQ6IHJnYmEoMiwgNiwgMjMsIDAuODUpOwogICAgICBkaXNwbGF5OiBub25lOwogICAgICBhbGlnbi1pdGVtczogY2VudGVyOwog',
  'ICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgICAgcGFkZGluZzogMS41cmVtOwogICAgICB6LWluZGV4OiAyMDsKICAgIH0KCiAgICAubW9kYWwt',
  'YmFja2Ryb3Auc2hvdyB7CiAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICB9CgogICAgLm1vZGFsIHsKICAgICAgd2lkdGg6IG1pbig1MjBweCwgOTZ2dyk7CiAg',
  'ICAgIGJhY2tncm91bmQ6IHJnYmEoMTUsIDIzLCA0MiwgMC45NSk7CiAgICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7CiAgICAgIGJvcmRlcjogMXB4IHNvbGlk',
  'IHZhcigtLXBhbmVsLWJvcmRlcik7CiAgICAgIHBhZGRpbmc6IDEuNXJlbTsKICAgICAgZGlzcGxheTogZmxleDsKICAgICAgZmxleC1kaXJlY3Rpb246IGNv',
  'bHVtbjsKICAgICAgZ2FwOiAxLjI1cmVtOwogICAgICBib3gtc2hhZG93OiAwIDI1cHggNjBweCByZ2JhKDIsIDYsIDIzLCAwLjc1KTsKICAgIH0KCiAgICAu',
  'bW9kYWwgaGVhZGVyIHsKICAgICAgZGlzcGxheTogZmxleDsKICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogICAgICBhbGlnbi1pdGVt',
  'czogY2VudGVyOwogICAgICBnYXA6IDAuNXJlbTsKICAgIH0KCiAgICAubW9kYWwgaGVhZGVyIGgyIHsKICAgICAgbWFyZ2luOiAwOwogICAgICBmb250LXNp',
  'emU6IDEuMzVyZW07CiAgICB9CgogICAgLmZvcm0tZ3JpZCB7CiAgICAgIGRpc3BsYXk6IGdyaWQ7CiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVw',
  'ZWF0KDIsIG1pbm1heCgwLCAxZnIpKTsKICAgICAgZ2FwOiAxcmVtOwogICAgfQoKICAgIC5mb3JtLWdyaWQgLmZ1bGwgewogICAgICBncmlkLWNvbHVtbjog',
  'MSAvIC0xOwogICAgfQoKICAgIGxhYmVsIHsKICAgICAgZGlzcGxheTogZmxleDsKICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgICAgZ2FwOiAw',
  'LjRyZW07CiAgICAgIGZvbnQtc2l6ZTogMC45NXJlbTsKICAgIH0KCiAgICBpbnB1dFt0eXBlPSJ0ZXh0Il0sCiAgICBpbnB1dFt0eXBlPSJkYXRlIl0sCiAg',
  'ICBpbnB1dFt0eXBlPSJ0aW1lIl0sCiAgICBpbnB1dFt0eXBlPSJudW1iZXIiXSwKICAgIHNlbGVjdCwKICAgIHRleHRhcmVhIHsKICAgICAgYmFja2dyb3Vu',
  'ZDogcmdiYSgxNSwgMjMsIDQyLCAwLjcpOwogICAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDE0OCwgMTYzLCAxODQsIDAuMzUpOwogICAgICBib3JkZXIt',
  'cmFkaXVzOiAxMnB4OwogICAgICBwYWRkaW5nOiAwLjU1cmVtIDAuNzVyZW07CiAgICAgIGNvbG9yOiBpbmhlcml0OwogICAgICBtaW4taGVpZ2h0OiA0MnB4',
  'OwogICAgfQoKICAgIHRleHRhcmVhIHsKICAgICAgcmVzaXplOiB2ZXJ0aWNhbDsKICAgICAgbWluLWhlaWdodDogODBweDsKICAgIH0KCiAgICBpbnB1dFt0',
  'eXBlPSJjaGVja2JveCJdIHsKICAgICAgd2lkdGg6IDE4cHg7CiAgICAgIGhlaWdodDogMThweDsKICAgICAgYWNjZW50LWNvbG9yOiB2YXIoLS1hY2NlbnQp',
  'OwogICAgfQoKICAgIC5mb3JtLWFjdGlvbnMgewogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAg',
  'ICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICAgIGdhcDogMC43NXJlbTsKICAgICAgZmxleC13cmFwOiB3cmFwOwogICAgfQoKICAgIC5kYW5nZXIgewog',
  'ICAgICBjb2xvcjogdmFyKC0tZGFuZ2VyKTsKICAgICAgYm9yZGVyLWNvbG9yOiByZ2JhKDI0OCwgMTEzLCAxMTMsIDAuMzUpOwogICAgfQoKICAgIC5zZXR0',
  'aW5ncy1ncmlkIHsKICAgICAgZGlzcGxheTogZ3JpZDsKICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgyMjBw',
  'eCwgMWZyKSk7CiAgICAgIGdhcDogMXJlbTsKICAgIH0KCiAgICAucGVyc29uLWNhcmQgewogICAgICBiYWNrZ3JvdW5kOiByZ2JhKDE1LCAyMywgNDIsIDAu',
  'Nik7CiAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLXBhbmVsLWJvcmRlcik7CiAgICAgIGJvcmRlci1yYWRpdXM6IDE2cHg7CiAgICAgIHBhZGRpbmc6',
  'IDFyZW07CiAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgICAgIGdhcDogMC43NXJlbTsKICAgIH0KCiAgICAu',
  'cGVyc29uLWNhcmQgaGVhZGVyIHsKICAgICAgZGlzcGxheTogZmxleDsKICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgICAgZ2FwOiAwLjc1cmVtOwog',
  'ICAgfQoKICAgIC5wZXJzb24tY2FyZCBoZWFkZXIgLmF2YXRhciB7CiAgICAgIHdpZHRoOiA0OHB4OwogICAgICBoZWlnaHQ6IDQ4cHg7CiAgICAgIGJvcmRl',
  'ci1yYWRpdXM6IDUwJTsKICAgICAgYmFja2dyb3VuZDogcmdiYSgxNDgsIDE2MywgMTg0LCAwLjE4KTsKICAgICAgZGlzcGxheTogZ3JpZDsKICAgICAgcGxh',
  'Y2UtaXRlbXM6IGNlbnRlcjsKICAgICAgZm9udC13ZWlnaHQ6IDYwMDsKICAgICAgZm9udC1zaXplOiAxLjFyZW07CiAgICB9CgogICAgLnBlcnNvbi1jYXJk',
  'IGlucHV0W3R5cGU9ImNvbG9yIl0gewogICAgICB3aWR0aDogMTAwJTsKICAgICAgaGVpZ2h0OiA0NHB4OwogICAgICBib3JkZXI6IG5vbmU7CiAgICAgIGJv',
  'cmRlci1yYWRpdXM6IDEycHg7CiAgICAgIHBhZGRpbmc6IDA7CiAgICB9CgogICAgLnBlcnNvbi1jYXJkIGlucHV0W3R5cGU9ImZpbGUiXSB7CiAgICAgIGJh',
  'Y2tncm91bmQ6IHRyYW5zcGFyZW50OwogICAgICBib3JkZXI6IG5vbmU7CiAgICAgIHBhZGRpbmc6IDA7CiAgICAgIGNvbG9yOiB2YXIoLS1tdXRlZCk7CiAg',
  'ICB9CgogICAgLmVtcHR5LXN0YXRlIHsKICAgICAgbWFyZ2luOiBhdXRvOwogICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgIGNvbG9yOiB2YXIoLS1t',
  'dXRlZCk7CiAgICAgIGZvbnQtc2l6ZTogMC45NXJlbTsKICAgIH0KCiAgICBAbWVkaWEgKG1heC13aWR0aDogOTAwcHgpIHsKICAgICAgLndlZWstZ3JpZCB7',
  'CiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgbWlubWF4KDAsIDFmcikpOwogICAgICB9CiAgICB9CgogICAgQG1lZGlhIChtYXgt',
  'd2lkdGg6IDYwMHB4KSB7CiAgICAgIGJvZHkgewogICAgICAgIHBhZGRpbmc6IDFyZW0gMC43NXJlbSA1cmVtOwogICAgICB9CgogICAgICBoZWFkZXIgewog',
  'ICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7CiAgICAgIH0KCiAgICAgIC53ZWVrLWFjdGlv',
  'bnMgewogICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICAgICAgfQoKICAgICAgLndlZWstZ3Jp',
  'ZCB7CiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7CiAgICAgIH0KCiAgICAgIC5mbG9hdGluZy1jb250cm9scyB7CiAgICAgICAgd2lkdGg6',
  'IGNhbGMoMTAwJSAtIDEuNXJlbSk7CiAgICAgICAgcmlnaHQ6IDAuNzVyZW07CiAgICAgICAgYm90dG9tOiAwLjc1cmVtOwogICAgICB9CiAgICB9CiAgPC9z',
  'dHlsZT4KPC9oZWFkPgo8Ym9keT4KICA8ZGl2IGNsYXNzPSJsYXlvdXQiPgogICAgPGhlYWRlcj4KICAgICAgPGgxIGlkPSJ0aXRsZVdlZWsiPkZhbWlsaWVv',
  'dmVyc2lndCDigJMgdWdlIDA8L2gxPgogICAgICA8ZGl2IGNsYXNzPSJ3ZWVrLWFjdGlvbnMiPgogICAgICAgIDxidXR0b24gaWQ9ImJ0blByZXYiIGNsYXNz',
  'PSJidG4gaWNvbiIgdHlwZT0iYnV0dG9uIiB0aXRsZT0iRm9ycmlnZSB1Z2UiIGFyaWEtbGFiZWw9IkfDpSB0aWwgZm9ycmlnZSB1Z2UiPuKfqDwvYnV0dG9u',
  'PgogICAgICAgIDxidXR0b24gaWQ9ImJ0bldlZWsiIGNsYXNzPSJidG4iIHR5cGU9ImJ1dHRvbiIgdGl0bGU9IlRpbGJhZ2UgdGlsIGFrdHVlbCB1Z2UiPlVn',
  'ZTwvYnV0dG9uPgogICAgICAgIDxidXR0b24gaWQ9ImJ0bk5leHQiIGNsYXNzPSJidG4gaWNvbiIgdHlwZT0iYnV0dG9uIiB0aXRsZT0iTsOmc3RlIHVnZSIg',
  'YXJpYS1sYWJlbD0iR8OlIHRpbCBuw6ZzdGUgdWdlIj7in6k8L2J1dHRvbj4KICAgICAgICA8YnV0dG9uIGlkPSJidG5OZXciIGNsYXNzPSJidG4gcHJpbWFy',
  'eSIgdHlwZT0iYnV0dG9uIj4rIE55PC9idXR0b24+CiAgICAgICAgPGJ1dHRvbiBpZD0iYnRuU2V0dGluZ3MiIGNsYXNzPSJidG4iIHR5cGU9ImJ1dHRvbiI+',
  'SW5kc3RpbGxpbmdlcjwvYnV0dG9uPgogICAgICA8L2Rpdj4KICAgIDwvaGVhZGVyPgoKICAgIDxuYXYgaWQ9InBlb3BsZUJhciIgY2xhc3M9InBlb3BsZS1i',
  'YXIiIGFyaWEtbGFiZWw9IkZpbHRyw6lyIHBlcnNvbmVyIj48L25hdj4KCiAgICA8c2VjdGlvbiBpZD0id2Vla0dyaWQiIGNsYXNzPSJ3ZWVrLWdyaWQiIGFy',
  'aWEtbGl2ZT0icG9saXRlIj48L3NlY3Rpb24+CgogICAgPHAgaWQ9ImVtcHR5U3RhdGUiIGNsYXNzPSJlbXB0eS1zdGF0ZSIgaGlkZGVuPkluZ2VuIGFmdGFs',
  'ZXIgZm9yIGRlbiB2YWxndGUgdmlzbmluZy48L3A+CiAgPC9kaXY+CgogIDxhc2lkZSBjbGFzcz0iZmxvYXRpbmctY29udHJvbHMiIGFyaWEtbGl2ZT0icG9s',
  'aXRlIj4KICAgIDxkaXYgY2xhc3M9InN5bmMtYmFkZ2UiIGlkPSJzeW5jQmFkZ2UiPkdvb2dsZSBzeW5jOiDigJQ8L2Rpdj4KICAgIDxkaXYgY2xhc3M9InN5',
  'bmMtYWN0aW9ucyI+CiAgICAgIDxidXR0b24gaWQ9ImJ0blN5bmMiIGNsYXNzPSJidG4iIHR5cGU9ImJ1dHRvbiI+U3luYyBudTwvYnV0dG9uPgogICAgICA8',
  'YnV0dG9uIGlkPSJidG5TeW5jSGFyZCIgY2xhc3M9ImJ0biIgdHlwZT0iYnV0dG9uIj5OdWxzdGlsICZhbXA7IHN5bmM8L2J1dHRvbj4KICAgIDwvZGl2Pgog',
  'IDwvYXNpZGU+CgogIDxkaXYgaWQ9ImRsZ0JhY2tkcm9wIiBjbGFzcz0ibW9kYWwtYmFja2Ryb3AiIHJvbGU9ImRpYWxvZyIgYXJpYS1tb2RhbD0idHJ1ZSIg',
  'YXJpYS1sYWJlbGxlZGJ5PSJkbGdUaXRsZSI+CiAgICA8ZGl2IGNsYXNzPSJtb2RhbCI+CiAgICAgIDxoZWFkZXI+CiAgICAgICAgPGgyIGlkPSJkbGdUaXRs',
  'ZSI+VGlsZsO4ajwvaDI+CiAgICAgICAgPGJ1dHRvbiBpZD0iZGxnQ2xvc2UiIGNsYXNzPSJidG4gaWNvbiIgdHlwZT0iYnV0dG9uIiBhcmlhLWxhYmVsPSJM',
  'dWsgZGlhbG9nIj7inJU8L2J1dHRvbj4KICAgICAgPC9oZWFkZXI+CiAgICAgIDxmb3JtIGlkPSJpdGVtRm9ybSI+CiAgICAgICAgPGRpdiBjbGFzcz0iZm9y',
  'bS1ncmlkIj4KICAgICAgICAgIDxsYWJlbCBjbGFzcz0iZnVsbCIgZm9yPSJmX3RpdGxlIj5UaXRlbAogICAgICAgICAgICA8aW5wdXQgaWQ9ImZfdGl0bGUi',
  'IG5hbWU9InRpdGxlIiB0eXBlPSJ0ZXh0IiByZXF1aXJlZD4KICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICA8bGFiZWwgZm9yPSJmX3R5cGUiPlR5cGUK',
  'ICAgICAgICAgICAgPHNlbGVjdCBpZD0iZl90eXBlIiBuYW1lPSJ0eXBlIj4KICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJha3Rpdml0ZXQiPkFrdGl2',
  'aXRldDwvb3B0aW9uPgogICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9Im9wZ2F2ZSI+T3BnYXZlPC9vcHRpb24+CiAgICAgICAgICAgICAgPG9wdGlvbiB2',
  'YWx1ZT0iZnJpdGlkIj5Gcml0aWRzaW50ZXJlc3NlPC9vcHRpb24+CiAgICAgICAgICAgIDwvc2VsZWN0PgogICAgICAgICAgPC9sYWJlbD4KICAgICAgICAg',
  'IDxsYWJlbCBmb3I9ImZfcGVyc29uIj5QZXJzb24KICAgICAgICAgICAgPHNlbGVjdCBpZD0iZl9wZXJzb24iIG5hbWU9InBlcnNvbiIgcmVxdWlyZWQ+PC9z',
  'ZWxlY3Q+CiAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgPGxhYmVsIGZvcj0iZl9kYXRlIj5EYXRvCiAgICAgICAgICAgIDxpbnB1dCBpZD0iZl9kYXRl',
  'IiBuYW1lPSJkYXRlIiB0eXBlPSJkYXRlIiByZXF1aXJlZD4KICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICA8bGFiZWwgZm9yPSJmX3RpbWUiPlRpZHNw',
  'dW5rdAogICAgICAgICAgICA8aW5wdXQgaWQ9ImZfdGltZSIgbmFtZT0idGltZSIgdHlwZT0idGltZSIgc3RlcD0iOTAwIj4KICAgICAgICAgIDwvbGFiZWw+',
  'CiAgICAgICAgICA8bGFiZWwgZm9yPSJmX2R1cmF0aW9uIj5WYXJpZ2hlZCAobWluKQogICAgICAgICAgICA8aW5wdXQgaWQ9ImZfZHVyYXRpb24iIG5hbWU9',
  'ImR1cmF0aW9uIiB0eXBlPSJudW1iZXIiIG1pbj0iMCIgc3RlcD0iMTUiPgogICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgIDxsYWJlbCBjbGFzcz0iZnVs',
  'bCIgZm9yPSJmX2xvY2F0aW9uIj5TdGVkCiAgICAgICAgICAgIDxpbnB1dCBpZD0iZl9sb2NhdGlvbiIgbmFtZT0ibG9jYXRpb24iIHR5cGU9InRleHQiIHBs',
  'YWNlaG9sZGVyPSJmeCBBZHJlc3NlIGVsbGVyIHN0ZWRuYXZuIj4KICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICA8bGFiZWwgY2xhc3M9ImZ1bGwiIGZv',
  'cj0iZl9ub3RlIj5Ob3RlCiAgICAgICAgICAgIDx0ZXh0YXJlYSBpZD0iZl9ub3RlIiBuYW1lPSJub3RlIiBwbGFjZWhvbGRlcj0iRWtzdHJhIGRldGFsamVy',
  'Ij48L3RleHRhcmVhPgogICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgIDxsYWJlbD48aW5wdXQgaWQ9ImZfcmVwZWF0IiBuYW1lPSJyZXBlYXQiIHR5cGU9',
  'ImNoZWNrYm94Ij4gR2VudGFnIGh2ZXIgdWdlPC9sYWJlbD4KICAgICAgICAgIDxsYWJlbD48aW5wdXQgaWQ9ImZfZG9uZSIgbmFtZT0iZG9uZSIgdHlwZT0i',
  'Y2hlY2tib3giPiBNYXJrZXIgc29tIHVkZsO4cnQ8L2xhYmVsPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tYWN0aW9ucyI+CiAg',
  'ICAgICAgICA8YnV0dG9uIGlkPSJidG5EZWxldGUiIGNsYXNzPSJidG4gZGFuZ2VyIiB0eXBlPSJidXR0b24iPlNsZXQ8L2J1dHRvbj4KICAgICAgICAgIDxi',
  'dXR0b24gaWQ9ImJ0blNhdmUiIGNsYXNzPSJidG4gcHJpbWFyeSIgdHlwZT0ic3VibWl0Ij5HZW08L2J1dHRvbj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9m',
  'b3JtPgogICAgPC9kaXY+CiAgPC9kaXY+CgogIDxkaXYgaWQ9InNldHRpbmdzQmFja2Ryb3AiIGNsYXNzPSJtb2RhbC1iYWNrZHJvcCIgcm9sZT0iZGlhbG9n',
  'IiBhcmlhLW1vZGFsPSJ0cnVlIiBhcmlhLWxhYmVsbGVkYnk9InNldHRpbmdzVGl0bGUiPgogICAgPGRpdiBjbGFzcz0ibW9kYWwiIHN0eWxlPSJtYXgtd2lk',
  'dGg6IDcyMHB4OyI+CiAgICAgIDxoZWFkZXI+CiAgICAgICAgPGgyIGlkPSJzZXR0aW5nc1RpdGxlIj5JbmRzdGlsbGluZ2VyPC9oMj4KICAgICAgICA8YnV0',
  'dG9uIGlkPSJidG5TZXR0aW5nc0Nsb3NlIiBjbGFzcz0iYnRuIGljb24iIHR5cGU9ImJ1dHRvbiIgYXJpYS1sYWJlbD0iTHVrIGluZHN0aWxsaW5nZXIiPuKc',
  'lTwvYnV0dG9uPgogICAgICA8L2hlYWRlcj4KICAgICAgPGRpdiBjbGFzcz0ic2V0dGluZ3MtZ3JpZCIgaWQ9InNldHRpbmdzR3JpZCI+PC9kaXY+CiAgICAg',
  'IDxkaXYgY2xhc3M9ImZvcm0tYWN0aW9ucyIgc3R5bGU9Imp1c3RpZnktY29udGVudDogZmxleC1lbmQ7Ij4KICAgICAgICA8YnV0dG9uIGlkPSJidG5TZXR0',
  'aW5nc1NhdmUiIGNsYXNzPSJidG4gcHJpbWFyeSIgdHlwZT0iYnV0dG9uIj5HZW08L2J1dHRvbj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2Rpdj4K',
  'CiAgPHRlbXBsYXRlIGlkPSJjaGlwVGVtcGxhdGUiPgogICAgPGJ1dHRvbiBjbGFzcz0iY2hpcCIgdHlwZT0iYnV0dG9uIj4KICAgICAgPHNwYW4gY2xhc3M9',
  'ImNoaXAtYXZhdGFyIj48L3NwYW4+CiAgICAgIDxzcGFuIGNsYXNzPSJjaGlwLW5hbWUiPjwvc3Bhbj4KICAgIDwvYnV0dG9uPgogIDwvdGVtcGxhdGU+Cgog',
  'IDx0ZW1wbGF0ZSBpZD0icGVyc29uQ2FyZFRlbXBsYXRlIj4KICAgIDxkaXYgY2xhc3M9InBlcnNvbi1jYXJkIj4KICAgICAgPGhlYWRlcj4KICAgICAgICA8',
  'ZGl2IGNsYXNzPSJhdmF0YXIiPjwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9Im1ldGEiPgogICAgICAgICAgPHN0cm9uZyBjbGFzcz0icGVyc29uLW5hbWUi',
  'Pjwvc3Ryb25nPgogICAgICAgICAgPGRpdiBjbGFzcz0icGVyc29uLWlkIiBzdHlsZT0iZm9udC1zaXplOjAuOHJlbTsgY29sb3I6IHZhcigtLW11dGVkKTsi',
  'PjwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2hlYWRlcj4KICAgICAgPGxhYmVsPk5hdm4KICAgICAgICA8aW5wdXQgY2xhc3M9ImlucHV0LW5hbWUi',
  'IHR5cGU9InRleHQiPgogICAgICA8L2xhYmVsPgogICAgICA8bGFiZWw+QXZhdGFyIChiaWxsZWRlKQogICAgICAgIDxpbnB1dCBjbGFzcz0iaW5wdXQtYXZh',
  'dGFyIiB0eXBlPSJmaWxlIiBhY2NlcHQ9ImltYWdlLyoiPgogICAgICA8L2xhYmVsPgogICAgICA8bGFiZWw+RmFydmUKICAgICAgICA8aW5wdXQgY2xhc3M9',
  'ImlucHV0LWNvbG9yIiB0eXBlPSJjb2xvciI+CiAgICAgIDwvbGFiZWw+CiAgICA8L2Rpdj4KICA8L3RlbXBsYXRlPgoKICA8c2NyaXB0PgogICAgY29uc3Qg',
  'TFNfSVRFTVMgPSAnZmFtX2l0ZW1zX3YxJzsKICAgIGNvbnN0IExTX0dDQUxfSU5ERVggPSAnZ2NhbF9pbmRleCc7CiAgICBjb25zdCBMU19QUkVGUyA9ICdm',
  'YW1fcGVvcGxlX3ByZWZzX3YxJzsKICAgIGNvbnN0IEFVVE9TWU5DX0lOVEVSVkFMID0gMTIwMDAwOwogICAgY29uc3QgR0FTX1VSTCA9ICcnOwoKICAgIGNv',
  'bnN0IERFRkFVTFRfUEVPUExFID0gWwogICAgICB7IGlkOiAnYWxsJywgbmFtZTogJ0FsbGUnLCBjb2xvcjogJyM5NGEzYjgnIH0sCiAgICAgIHsgaWQ6ICdm',
  'YXInLCBuYW1lOiAnRmFyJywgY29sb3I6ICcjMzhiZGY4JyB9LAogICAgICB7IGlkOiAnbW9yJywgbmFtZTogJ01vcicsIGNvbG9yOiAnI2Y0NzJiNicgfSwK',
  'ICAgICAgeyBpZDogJ2NhcmwnLCBuYW1lOiAnQ2FybCcsIGNvbG9yOiAnI2E4NTVmNycgfSwKICAgICAgeyBpZDogJ2pha29iJywgbmFtZTogJ0pha29iJywg',
  'Y29sb3I6ICcjZmFjYzE1JyB9LAogICAgICB7IGlkOiAnaWRhJywgbmFtZTogJ0lkYScsIGNvbG9yOiAnIzM0ZDM5OScgfQogICAgXTsKCiAgICBjb25zdCBu',
  'b3JtYWxpc2VUeXBlID0gKHZhbHVlKSA9PiB7CiAgICAgIGlmICghdmFsdWUpIHJldHVybiAnYWt0aXZpdGV0JzsKICAgICAgY29uc3QgbWFwID0gewogICAg',
  'ICAgIGFrdGl2aXRldDogJ2FrdGl2aXRldCcsCiAgICAgICAgb3BnYXZlOiAnb3BnYXZlJywKICAgICAgICBmcml0aWRzaW50ZXJlc3NlOiAnZnJpdGlkJywK',
  'ICAgICAgICBmcml0aWQ6ICdmcml0aWQnLAogICAgICAgIGhvYmJ5OiAnZnJpdGlkJwogICAgICB9OwogICAgICBjb25zdCBrZXkgPSB2YWx1ZS50b1N0cmlu',
  'ZygpLnRvTG93ZXJDYXNlKCk7CiAgICAgIHJldHVybiBtYXBba2V5XSB8fCAnYWt0aXZpdGV0JzsKICAgIH07CgogICAgY29uc3Qgc3RhdGUgPSB7CiAgICAg',
  'IHBlb3BsZTogW10sCiAgICAgIGl0ZW1zOiBbXSwKICAgICAgYWN0aXZlUGVyc29uOiAnYWxsJywKICAgICAgY3VycmVudFdlZWtTdGFydDogc3RhcnRPZldl',
  'ZWsobmV3IERhdGUoKSksCiAgICAgIGVkaXRpbmdJdGVtOiBudWxsLAogICAgICBjYWxlbmRhckxvYWRlZEF0OiBEYXRlLm5vdygpLAogICAgICBhdXRvc3lu',
  'Y1RpbWVyOiBudWxsCiAgICB9OwoKICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7CiAgICAgIGxvYWRQ',
  'cmVmZXJlbmNlcygpOwogICAgICBsb2FkSXRlbXMoKTsKICAgICAgYnVpbGRQZXJzb25TZWxlY3QoKTsKICAgICAgcmVuZGVyUGVvcGxlQmFyKCk7CiAgICAg',
  'IGF0dGFjaEV2ZW50SGFuZGxlcnMoKTsKICAgICAgcmVuZGVyV2VlaygpOwogICAgICBzY2hlZHVsZUF1dG9zeW5jKCk7CiAgICB9KTsKCiAgICBmdW5jdGlv',
  'biBhdHRhY2hFdmVudEhhbmRsZXJzKCkgewogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnRuUHJldicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNr',
  'JywgKCkgPT4gY2hhbmdlV2VlaygtMSkpOwogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnRuTmV4dCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNr',
  'JywgKCkgPT4gY2hhbmdlV2VlaygxKSk7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdidG5XZWVrJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2sn',
  'LCAoKSA9PiB7CiAgICAgICAgc3RhdGUuY3VycmVudFdlZWtTdGFydCA9IHN0YXJ0T2ZXZWVrKG5ldyBEYXRlKCkpOwogICAgICAgIHJlbmRlcldlZWsoKTsK',
  'ICAgICAgfSk7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdidG5OZXcnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IG9wZW5JdGVt',
  'RGlhbG9nKCkpOwogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnRuU2V0dGluZ3MnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG9wZW5TZXR0',
  'aW5ncyk7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdidG5TZXR0aW5nc0Nsb3NlJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjbG9zZVNl',
  'dHRpbmdzKTsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J0blNldHRpbmdzU2F2ZScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc2F2ZVNl',
  'dHRpbmdzKTsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J0blN5bmMnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHJ1blN5bmMo',
  'ZmFsc2UpKTsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J0blN5bmNIYXJkJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiBydW5T',
  'eW5jKHRydWUpKTsKCiAgICAgIGNvbnN0IGZvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaXRlbUZvcm0nKTsKICAgICAgZm9ybS5hZGRFdmVudExp',
  'c3RlbmVyKCdzdWJtaXQnLCBoYW5kbGVTYXZlSXRlbSk7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkbGdDbG9zZScpLmFkZEV2ZW50TGlzdGVu',
  'ZXIoJ2NsaWNrJywgY2xvc2VEaWFsb2cpOwogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnRuRGVsZXRlJykuYWRkRXZlbnRMaXN0ZW5lcignY2xp',
  'Y2snLCBoYW5kbGVEZWxldGVJdGVtKTsKICAgIH0KCiAgICBmdW5jdGlvbiBzdGFydE9mV2VlayhkYXRlKSB7CiAgICAgIGNvbnN0IGQgPSBuZXcgRGF0ZShk',
  'YXRlKTsKICAgICAgY29uc3QgZGF5ID0gZC5nZXREYXkoKTsKICAgICAgY29uc3QgZGlmZiA9IChkYXkgPT09IDAgPyAtNiA6IDEpIC0gZGF5OwogICAgICBk',
  'LnNldERhdGUoZC5nZXREYXRlKCkgKyBkaWZmKTsKICAgICAgZC5zZXRIb3VycygwLCAwLCAwLCAwKTsKICAgICAgcmV0dXJuIGQ7CiAgICB9CgogICAgZnVu',
  'Y3Rpb24gYWRkRGF5cyhkYXRlLCBkYXlzKSB7CiAgICAgIGNvbnN0IGQgPSBuZXcgRGF0ZShkYXRlKTsKICAgICAgZC5zZXREYXRlKGQuZ2V0RGF0ZSgpICsg',
  'ZGF5cyk7CiAgICAgIHJldHVybiBkOwogICAgfQoKICAgIGZ1bmN0aW9uIGZvcm1hdERhdGUoZGF0ZSkgewogICAgICByZXR1cm4gZGF0ZS50b0lTT1N0cmlu',
  'ZygpLnNwbGl0KCdUJylbMF07CiAgICB9CgogICAgZnVuY3Rpb24gbG9hZFByZWZlcmVuY2VzKCkgewogICAgICBjb25zdCByYXcgPSBsb2NhbFN0b3JhZ2Uu',
  'Z2V0SXRlbShMU19QUkVGUyk7CiAgICAgIGxldCBzdG9yZWQgPSBbXTsKICAgICAgaWYgKHJhdykgewogICAgICAgIHRyeSB7CiAgICAgICAgICBzdG9yZWQg',
  'PSBKU09OLnBhcnNlKHJhdyk7CiAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICBjb25zb2xlLmVycm9yKCdLdW5uZSBpa2tlIGzDpnNlIHByw6Zm',
  'ZXJlbmNlcicsIGVycik7CiAgICAgICAgfQogICAgICB9CiAgICAgIGNvbnN0IGJ5SWQgPSBuZXcgTWFwKHN0b3JlZC5tYXAocCA9PiBbcC5pZCwgcF0pKTsK',
  'ICAgICAgc3RhdGUucGVvcGxlID0gREVGQVVMVF9QRU9QTEUubWFwKHAgPT4gKHsKICAgICAgICAuLi5wLAogICAgICAgIC4uLihieUlkLmdldChwLmlkKSB8',
  'fCB7fSkKICAgICAgfSkpLm1hcChwZXJzb24gPT4gKHsgLi4ucGVyc29uLCBhdmF0YXI6IHBlcnNvbi5hdmF0YXIgfHwgJycgfSkpOwogICAgICAvLyBFbnN1',
  'cmUgIkFsbGUiIGFsd2F5cyBmaXJzdCBhbmQgd2l0aG91dCBhdmF0YXIgY29sb3IgY2hhbmdlIGVmZmVjdC4KICAgICAgc3RhdGUucGVvcGxlWzBdLmF2YXRh',
  'ciA9ICcnOwogICAgfQoKICAgIGZ1bmN0aW9uIGxvYWRJdGVtcygpIHsKICAgICAgY29uc3QgcmF3ID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oTFNfSVRFTVMp',
  'OwogICAgICBpZiAoIXJhdykgewogICAgICAgIHN0YXRlLml0ZW1zID0gW107CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHRyeSB7CiAgICAgICAg',
  'Y29uc3QgcGFyc2VkID0gSlNPTi5wYXJzZShyYXcpOwogICAgICAgIHN0YXRlLml0ZW1zID0gQXJyYXkuaXNBcnJheShwYXJzZWQpID8gcGFyc2VkIDogW107',
  'CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ0t1bm5lIGlra2UgbMOmc2UgYWZ0YWxlcicsIGVycik7CiAgICAgICAgc3Rh',
  'dGUuaXRlbXMgPSBbXTsKICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIHNhdmVJdGVtcygpIHsKICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oTFNfSVRF',
  'TVMsIEpTT04uc3RyaW5naWZ5KHN0YXRlLml0ZW1zKSk7CiAgICB9CgogICAgZnVuY3Rpb24gYnVpbGRQZXJzb25TZWxlY3QoKSB7CiAgICAgIGNvbnN0IHNl',
  'bGVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmX3BlcnNvbicpOwogICAgICBzZWxlY3QuaW5uZXJIVE1MID0gJyc7CiAgICAgIHN0YXRlLnBlb3Bs',
  'ZS5maWx0ZXIocCA9PiBwLmlkICE9PSAnYWxsJykuZm9yRWFjaChwZXJzb24gPT4gewogICAgICAgIGNvbnN0IG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVs',
  'ZW1lbnQoJ29wdGlvbicpOwogICAgICAgIG9wdGlvbi52YWx1ZSA9IHBlcnNvbi5pZDsKICAgICAgICBvcHRpb24udGV4dENvbnRlbnQgPSBwZXJzb24ubmFt',
  'ZTsKICAgICAgICBzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uKTsKICAgICAgfSk7CiAgICB9CgogICAgZnVuY3Rpb24gcmVuZGVyUGVvcGxlQmFyKCkgewog',
  'ICAgICBjb25zdCBiYXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncGVvcGxlQmFyJyk7CiAgICAgIGJhci5pbm5lckhUTUwgPSAnJzsKICAgICAgY29u',
  'c3QgdGVtcGxhdGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2hpcFRlbXBsYXRlJyk7CiAgICAgIHN0YXRlLnBlb3BsZS5mb3JFYWNoKHBlcnNvbiA9',
  'PiB7CiAgICAgICAgY29uc3Qgbm9kZSA9IHRlbXBsYXRlLmNvbnRlbnQuZmlyc3RFbGVtZW50Q2hpbGQuY2xvbmVOb2RlKHRydWUpOwogICAgICAgIGNvbnN0',
  'IGF2YXRhciA9IG5vZGUucXVlcnlTZWxlY3RvcignLmNoaXAtYXZhdGFyJyk7CiAgICAgICAgY29uc3QgbmFtZSA9IG5vZGUucXVlcnlTZWxlY3RvcignLmNo',
  'aXAtbmFtZScpOwogICAgICAgIGF2YXRhci5zdHlsZS5iYWNrZ3JvdW5kID0gcGVyc29uLmNvbG9yOwogICAgICAgIGF2YXRhci50ZXh0Q29udGVudCA9IHBl',
  'cnNvbi5hdmF0YXIgPyAnJyA6IHBlcnNvbi5uYW1lLnNsaWNlKDAsIDEpLnRvVXBwZXJDYXNlKCk7CiAgICAgICAgaWYgKHBlcnNvbi5hdmF0YXIpIHsKICAg',
  'ICAgICAgIGF2YXRhci5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgPSBgdXJsKCR7cGVyc29uLmF2YXRhcn0pYDsKICAgICAgICAgIGF2YXRhci5zdHlsZS5iYWNr',
  'Z3JvdW5kU2l6ZSA9ICdjb3Zlcic7CiAgICAgICAgICBhdmF0YXIuc3R5bGUuYmFja2dyb3VuZFBvc2l0aW9uID0gJ2NlbnRlcic7CiAgICAgICAgfSBlbHNl',
  'IHsKICAgICAgICAgIGF2YXRhci5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgPSAnJzsKICAgICAgICB9CiAgICAgICAgbmFtZS50ZXh0Q29udGVudCA9IHBlcnNv',
  'bi5uYW1lOwogICAgICAgIG5vZGUuZGF0YXNldC5wZXJzb25JZCA9IHBlcnNvbi5pZDsKICAgICAgICBub2RlLnN0eWxlLmJvcmRlckNvbG9yID0gcGVyc29u',
  'LmlkID09PSAnYWxsJyA/ICdyZ2JhKDE0OCwxNjMsMTg0LDAuNDUpJyA6IHBlcnNvbi5jb2xvcjsKICAgICAgICBub2RlLnN0eWxlLmNvbG9yID0gcGVyc29u',
  'LmlkID09PSAnYWxsJyA/ICdyZ2JhKDIyNiwyMzIsMjQwLDAuOSknIDogcGVyc29uLmNvbG9yOwogICAgICAgIGlmIChzdGF0ZS5hY3RpdmVQZXJzb24gPT09',
  'IHBlcnNvbi5pZCkgewogICAgICAgICAgbm9kZS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTsKICAgICAgICB9CiAgICAgICAgbm9kZS5hZGRFdmVudExpc3Rl',
  'bmVyKCdjbGljaycsICgpID0+IHsKICAgICAgICAgIHN0YXRlLmFjdGl2ZVBlcnNvbiA9IHBlcnNvbi5pZDsKICAgICAgICAgIHJlbmRlclBlb3BsZUJhcigp',
  'OwogICAgICAgICAgcmVuZGVyV2VlaygpOwogICAgICAgIH0pOwogICAgICAgIGJhci5hcHBlbmRDaGlsZChub2RlKTsKICAgICAgfSk7CiAgICB9CgogICAg',
  'ZnVuY3Rpb24gY2hhbmdlV2VlayhvZmZzZXQpIHsKICAgICAgc3RhdGUuY3VycmVudFdlZWtTdGFydCA9IGFkZERheXMoc3RhdGUuY3VycmVudFdlZWtTdGFy',
  'dCwgb2Zmc2V0ICogNyk7CiAgICAgIHJlbmRlcldlZWsoKTsKICAgIH0KCiAgICBmdW5jdGlvbiBnZXRXZWVrTnVtYmVyKGRhdGUpIHsKICAgICAgY29uc3Qg',
  'ZCA9IG5ldyBEYXRlKERhdGUuVVRDKGRhdGUuZ2V0RnVsbFllYXIoKSwgZGF0ZS5nZXRNb250aCgpLCBkYXRlLmdldERhdGUoKSkpOwogICAgICBjb25zdCBk',
  'YXlOdW0gPSBkLmdldFVUQ0RheSgpIHx8IDc7CiAgICAgIGQuc2V0VVRDRGF0ZShkLmdldFVUQ0RhdGUoKSArIDQgLSBkYXlOdW0pOwogICAgICBjb25zdCB5',
  'ZWFyU3RhcnQgPSBuZXcgRGF0ZShEYXRlLlVUQyhkLmdldFVUQ0Z1bGxZZWFyKCksIDAsIDEpKTsKICAgICAgY29uc3Qgd2Vla05vID0gTWF0aC5jZWlsKCgo',
  'ZCAtIHllYXJTdGFydCkgLyA4NjQwMDAwMCArIDEpIC8gNyk7CiAgICAgIHJldHVybiB7IHdlZWs6IHdlZWtObywgeWVhcjogZC5nZXRVVENGdWxsWWVhcigp',
  'IH07CiAgICB9CgogICAgZnVuY3Rpb24gcmVuZGVyV2VlaygpIHsKICAgICAgY29uc3Qgc3RhcnQgPSBzdGF0ZS5jdXJyZW50V2Vla1N0YXJ0OwogICAgICBj',
  'b25zdCB7IHdlZWssIHllYXIgfSA9IGdldFdlZWtOdW1iZXIoc3RhcnQpOwogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGl0bGVXZWVrJykudGV4',
  'dENvbnRlbnQgPSBgRmFtaWxpZW92ZXJzaWd0IOKAkyB1Z2UgJHt3ZWVrfWA7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdidG5XZWVrJykudGV4',
  'dENvbnRlbnQgPSBgVWdlICR7d2Vla30gwrcgJHt5ZWFyfWA7CgogICAgICBjb25zdCBncmlkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3dlZWtHcmlk',
  'Jyk7CiAgICAgIGdyaWQuaW5uZXJIVE1MID0gJyc7CgogICAgICBjb25zdCBkYXlzID0gQXJyYXkuZnJvbSh7IGxlbmd0aDogNyB9LCAoXywgaSkgPT4gYWRk',
  'RGF5cyhzdGFydCwgaSkpOwogICAgICBjb25zdCBlbnRyaWVzID0gZmlsdGVySXRlbXNGb3JXZWVrKGRheXNbMF0sIGRheXNbNl0pOwogICAgICBjb25zdCBo',
  'YXNJdGVtcyA9IGVudHJpZXMubGVuZ3RoID4gMDsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2VtcHR5U3RhdGUnKS5oaWRkZW4gPSBoYXNJdGVt',
  'czsKCiAgICAgIGRheXMuZm9yRWFjaChkYXkgPT4gewogICAgICAgIGNvbnN0IGRheU5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhcnRpY2xlJyk7',
  'CiAgICAgICAgZGF5Tm9kZS5jbGFzc05hbWUgPSAnZGF5JzsKICAgICAgICBkYXlOb2RlLnRhYkluZGV4ID0gMDsKICAgICAgICBkYXlOb2RlLmRhdGFzZXQu',
  'ZGF0ZSA9IGZvcm1hdERhdGUoZGF5KTsKICAgICAgICBkYXlOb2RlLmFkZEV2ZW50TGlzdGVuZXIoJ2RibGNsaWNrJywgKCkgPT4gb3Blbkl0ZW1EaWFsb2co',
  'eyBkYXRlOiBmb3JtYXREYXRlKGRheSkgfSkpOwogICAgICAgIGRheU5vZGUuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChldikgPT4gewogICAgICAg',
  'ICAgaWYgKGV2LmtleSA9PT0gJ0VudGVyJyAmJiBldi50YXJnZXQgPT09IGRheU5vZGUpIHsKICAgICAgICAgICAgZXYucHJldmVudERlZmF1bHQoKTsKICAg',
  'ICAgICAgICAgb3Blbkl0ZW1EaWFsb2coeyBkYXRlOiBmb3JtYXREYXRlKGRheSkgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CgogICAgICAgIGNvbnN0',
  'IGhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwogICAgICAgIGhlYWRlci5jbGFzc05hbWUgPSAnZGF5LWhlYWRlcic7CiAgICAgICAg',
  'Y29uc3QgdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7CiAgICAgICAgdGl0bGUudGV4dENvbnRlbnQgPSBkYXkudG9Mb2NhbGVEYXRl',
  'U3RyaW5nKCdkYS1ESycsIHsgd2Vla2RheTogJ2xvbmcnIH0pOwogICAgICAgIGNvbnN0IGRhdGVMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3Nw',
  'YW4nKTsKICAgICAgICBkYXRlTGFiZWwuY2xhc3NOYW1lID0gJ2RheS1kYXRlJzsKICAgICAgICBkYXRlTGFiZWwudGV4dENvbnRlbnQgPSBkYXkudG9Mb2Nh',
  'bGVEYXRlU3RyaW5nKCdkYS1ESycsIHsgZGF5OiAnbnVtZXJpYycsIG1vbnRoOiAnbnVtZXJpYycgfSk7CiAgICAgICAgaGVhZGVyLmFwcGVuZCh0aXRsZSwg',
  'ZGF0ZUxhYmVsKTsKCiAgICAgICAgY29uc3QgbGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwogICAgICAgIGxpc3QuY2xhc3NOYW1lID0g',
  'J2l0ZW1zJzsKCiAgICAgICAgY29uc3QgZGF5SXRlbXMgPSBlbnRyaWVzLmZpbHRlcihlbnRyeSA9PiBlbnRyeS5yZW5kZXJEYXRlID09PSBmb3JtYXREYXRl',
  'KGRheSkpOwogICAgICAgIGRheUl0ZW1zLnNvcnQoKGEsIGIpID0+IChhLnRpbWUgfHwgJzI0OjAwJykubG9jYWxlQ29tcGFyZShiLnRpbWUgfHwgJzI0OjAw',
  'JykpOwogICAgICAgIGRheUl0ZW1zLmZvckVhY2goaXRlbSA9PiB7CiAgICAgICAgICBsaXN0LmFwcGVuZENoaWxkKHJlbmRlckl0ZW0oaXRlbSkpOwogICAg',
  'ICAgIH0pOwoKICAgICAgICBkYXlOb2RlLmFwcGVuZChoZWFkZXIsIGxpc3QpOwogICAgICAgIGdyaWQuYXBwZW5kQ2hpbGQoZGF5Tm9kZSk7CiAgICAgIH0p',
  'OwogICAgfQoKICAgIGZ1bmN0aW9uIGZpbHRlckl0ZW1zRm9yV2VlayhzdGFydCwgZW5kKSB7CiAgICAgIGNvbnN0IHN0YXJ0RGF0ZSA9IG5ldyBEYXRlKHN0',
  'YXJ0KTsKICAgICAgY29uc3QgZW5kRGF0ZSA9IG5ldyBEYXRlKGVuZCk7CiAgICAgIGNvbnN0IGl0ZW1zID0gW107CiAgICAgIHN0YXRlLml0ZW1zLmZvckVh',
  'Y2goaXRlbSA9PiB7CiAgICAgICAgY29uc3QgaXRlbURhdGUgPSBuZXcgRGF0ZShpdGVtLmRhdGUgKyAnVDAwOjAwOjAwJyk7CiAgICAgICAgaWYgKGl0ZW0u',
  'cmVwZWF0KSB7CiAgICAgICAgICBpZiAoaXRlbURhdGUgPiBlbmREYXRlKSByZXR1cm47CiAgICAgICAgICBjb25zdCBiYXNlV2Vla2RheSA9IGl0ZW1EYXRl',
  'LmdldERheSgpID09PSAwID8gNyA6IGl0ZW1EYXRlLmdldERheSgpOwogICAgICAgICAgZm9yIChsZXQgY3Vyc29yID0gbmV3IERhdGUoc3RhcnREYXRlKTsg',
  'Y3Vyc29yIDw9IGVuZERhdGU7IGN1cnNvciA9IGFkZERheXMoY3Vyc29yLCAxKSkgewogICAgICAgICAgICBjb25zdCBjdXJzb3JXZWVrZGF5ID0gY3Vyc29y',
  'LmdldERheSgpID09PSAwID8gNyA6IGN1cnNvci5nZXREYXkoKTsKICAgICAgICAgICAgaWYgKGN1cnNvciA8IGl0ZW1EYXRlKSBjb250aW51ZTsKICAgICAg',
  'ICAgICAgaWYgKGN1cnNvcldlZWtkYXkgIT09IGJhc2VXZWVrZGF5KSBjb250aW51ZTsKICAgICAgICAgICAgY29uc3QgZGlmZiA9IE1hdGgucm91bmQoKGN1',
  'cnNvciAtIGl0ZW1EYXRlKSAvIDg2NDAwMDAwKTsKICAgICAgICAgICAgaWYgKGRpZmYgJSA3ID09PSAwKSB7CiAgICAgICAgICAgICAgaXRlbXMucHVzaCh7',
  'IC4uLml0ZW0sIHJlbmRlckRhdGU6IGZvcm1hdERhdGUoY3Vyc29yKSB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAg',
  'ICAgICAgICBpZiAoaXRlbURhdGUgPj0gc3RhcnREYXRlICYmIGl0ZW1EYXRlIDw9IGVuZERhdGUpIHsKICAgICAgICAgICAgaXRlbXMucHVzaCh7IC4uLml0',
  'ZW0sIHJlbmRlckRhdGU6IGl0ZW0uZGF0ZSB9KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwoKICAgICAgcmV0dXJuIGl0ZW1zLmZpbHRlcihp',
  'dGVtID0+IHN0YXRlLmFjdGl2ZVBlcnNvbiA9PT0gJ2FsbCcgfHwgaXRlbS5wZXJzb25JZCA9PT0gc3RhdGUuYWN0aXZlUGVyc29uKTsKICAgIH0KCiAgICBm',
  'dW5jdGlvbiByZW5kZXJJdGVtKGl0ZW0pIHsKICAgICAgY29uc3Qgbm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2FydGljbGUnKTsKICAgICAgbm9k',
  'ZS5jbGFzc05hbWUgPSAnaXRlbSc7CiAgICAgIGNvbnN0IHBlcnNvbiA9IHN0YXRlLnBlb3BsZS5maW5kKHAgPT4gcC5pZCA9PT0gaXRlbS5wZXJzb25JZCkg',
  'fHwgc3RhdGUucGVvcGxlWzBdOwogICAgICBub2RlLnN0eWxlLmJvcmRlckNvbG9yID0gcGVyc29uLmNvbG9yOwogICAgICBub2RlLnN0eWxlLmNvbG9yID0g',
  'JyNmZmYnOwogICAgICBub2RlLmRhdGFzZXQuaXRlbUlkID0gaXRlbS5pZDsKICAgICAgbm9kZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IG9w',
  'ZW5JdGVtRGlhbG9nKHsgaXRlbSB9KSk7CgogICAgICBjb25zdCBvdmVybGF5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICAgIG92ZXJs',
  'YXkuc3R5bGUuYmFja2dyb3VuZCA9IHBlcnNvbi5jb2xvcjsKICAgICAgb3ZlcmxheS5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7CiAgICAgIG92ZXJs',
  'YXkuc3R5bGUuaW5zZXQgPSAnMCc7CiAgICAgIG92ZXJsYXkuc3R5bGUub3BhY2l0eSA9ICcwLjE2JzsKICAgICAgb3ZlcmxheS5zdHlsZS5ib3JkZXJSYWRp',
  'dXMgPSAnMTRweCc7CiAgICAgIG5vZGUuYXBwZW5kQ2hpbGQob3ZlcmxheSk7CgogICAgICBjb25zdCB0b3AgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdk',
  'aXYnKTsKICAgICAgdG9wLmNsYXNzTmFtZSA9ICdpdGVtLXRvcCc7CiAgICAgIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3Bhbicp',
  'OwogICAgICB0aXRsZS50ZXh0Q29udGVudCA9IGl0ZW0udGl0bGU7CiAgICAgIGNvbnN0IHRpbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7',
  'CiAgICAgIHRpbWUudGV4dENvbnRlbnQgPSBpdGVtLnRpbWUgPyBpdGVtLnRpbWUgOiAnSGVsZSBkYWdlbic7CiAgICAgIHRvcC5hcHBlbmQodGl0bGUsIHRp',
  'bWUpOwoKICAgICAgY29uc3QgbWV0YSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwogICAgICBtZXRhLmNsYXNzTmFtZSA9ICdpdGVtLW1ldGEn',
  'OwogICAgICBjb25zdCB0eXBlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogICAgICB0eXBlLmNsYXNzTmFtZSA9ICdiYWRnZSc7CiAgICAg',
  'IHR5cGUudGV4dENvbnRlbnQgPSBmb3JtYXRUeXBlKGl0ZW0udHlwZSk7CiAgICAgIG1ldGEuYXBwZW5kQ2hpbGQodHlwZSk7CgogICAgICBjb25zdCBwZXJz',
  'b25CYWRnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTsKICAgICAgcGVyc29uQmFkZ2UuY2xhc3NOYW1lID0gJ2JhZGdlJzsKICAgICAgcGVy',
  'c29uQmFkZ2UudGV4dENvbnRlbnQgPSBwZXJzb24ubmFtZTsKICAgICAgbWV0YS5hcHBlbmRDaGlsZChwZXJzb25CYWRnZSk7CgogICAgICBpZiAoaXRlbS5s',
  'b2NhdGlvbikgewogICAgICAgIGNvbnN0IGxvYyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTsKICAgICAgICBsb2MudGV4dENvbnRlbnQgPSBp',
  'dGVtLmxvY2F0aW9uOwogICAgICAgIG1ldGEuYXBwZW5kQ2hpbGQobG9jKTsKICAgICAgfQogICAgICBpZiAoaXRlbS5kdXJhdGlvbikgewogICAgICAgIGNv',
  'bnN0IGR1ciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTsKICAgICAgICBkdXIudGV4dENvbnRlbnQgPSBgJHtpdGVtLmR1cmF0aW9ufSBtaW5g',
  'OwogICAgICAgIG1ldGEuYXBwZW5kQ2hpbGQoZHVyKTsKICAgICAgfQogICAgICBpZiAoaXRlbS5kb25lKSB7CiAgICAgICAgY29uc3QgZG9uZSA9IGRvY3Vt',
  'ZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTsKICAgICAgICBkb25lLmNsYXNzTmFtZSA9ICdiYWRnZSBkb25lJzsKICAgICAgICBkb25lLnRleHRDb250ZW50',
  'ID0gJ+KclCBVZGbDuHJ0JzsKICAgICAgICBtZXRhLmFwcGVuZENoaWxkKGRvbmUpOwogICAgICB9CiAgICAgIGlmIChpdGVtLm5vdGUpIHsKICAgICAgICBj',
  'b25zdCBub3RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogICAgICAgIG5vdGUudGV4dENvbnRlbnQgPSBpdGVtLm5vdGU7CiAgICAgICAg',
  'bWV0YS5hcHBlbmRDaGlsZChub3RlKTsKICAgICAgfQoKICAgICAgbm9kZS5hcHBlbmQodG9wLCBtZXRhKTsKICAgICAgcmV0dXJuIG5vZGU7CiAgICB9Cgog',
  'ICAgZnVuY3Rpb24gZm9ybWF0VHlwZSh0eXBlKSB7CiAgICAgIHN3aXRjaCAodHlwZSkgewogICAgICAgIGNhc2UgJ29wZ2F2ZSc6CiAgICAgICAgICByZXR1',
  'cm4gJ09wZ2F2ZSc7CiAgICAgICAgY2FzZSAnZnJpdGlkJzoKICAgICAgICAgIHJldHVybiAnRnJpdGlkJzsKICAgICAgICBkZWZhdWx0OgogICAgICAgICAg',
  'cmV0dXJuICdBa3Rpdml0ZXQnOwogICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gb3Blbkl0ZW1EaWFsb2coeyBpdGVtID0gbnVsbCwgZGF0ZSA9IG51bGwg',
  'fSA9IHt9KSB7CiAgICAgIHN0YXRlLmVkaXRpbmdJdGVtID0gaXRlbTsKICAgICAgY29uc3QgZGxnID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RsZ0Jh',
  'Y2tkcm9wJyk7CiAgICAgIGRsZy5jbGFzc0xpc3QuYWRkKCdzaG93Jyk7CiAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSAnaGlkZGVuJzsK',
  'ICAgICAgY29uc3QgZm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpdGVtRm9ybScpOwogICAgICBmb3JtLnJlc2V0KCk7CiAgICAgIGRvY3VtZW50',
  'LmdldEVsZW1lbnRCeUlkKCdidG5EZWxldGUnKS5zdHlsZS52aXNpYmlsaXR5ID0gaXRlbSA/ICd2aXNpYmxlJyA6ICdoaWRkZW4nOwogICAgICBkb2N1bWVu',
  'dC5nZXRFbGVtZW50QnlJZCgnZGxnVGl0bGUnKS50ZXh0Q29udGVudCA9IGl0ZW0gPyAnUmVkaWfDqXInIDogJ1RpbGbDuGonOwoKICAgICAgaWYgKGl0ZW0p',
  'IHsKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZl90aXRsZScpLnZhbHVlID0gaXRlbS50aXRsZTsKICAgICAgICBkb2N1bWVudC5nZXRFbGVt',
  'ZW50QnlJZCgnZl90eXBlJykudmFsdWUgPSBub3JtYWxpc2VUeXBlKGl0ZW0udHlwZSk7CiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZfcGVy',
  'c29uJykudmFsdWUgPSBpdGVtLnBlcnNvbklkOwogICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmX2RhdGUnKS52YWx1ZSA9IGl0ZW0uZGF0ZTsK',
  'ICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZl90aW1lJykudmFsdWUgPSBpdGVtLnRpbWUgfHwgJyc7CiAgICAgICAgZG9jdW1lbnQuZ2V0RWxl',
  'bWVudEJ5SWQoJ2ZfZHVyYXRpb24nKS52YWx1ZSA9IGl0ZW0uZHVyYXRpb24gfHwgJyc7CiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZfbG9j',
  'YXRpb24nKS52YWx1ZSA9IGl0ZW0ubG9jYXRpb24gfHwgJyc7CiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Zfbm90ZScpLnZhbHVlID0gaXRl',
  'bS5ub3RlIHx8ICcnOwogICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmX3JlcGVhdCcpLmNoZWNrZWQgPSBCb29sZWFuKGl0ZW0ucmVwZWF0KTsK',
  'ICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZl9kb25lJykuY2hlY2tlZCA9IEJvb2xlYW4oaXRlbS5kb25lKTsKICAgICAgfSBlbHNlIHsKICAg',
  'ICAgICBjb25zdCB0b2RheSA9IGRhdGUgfHwgZm9ybWF0RGF0ZShuZXcgRGF0ZSgpKTsKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZl90eXBl',
  'JykudmFsdWUgPSAnYWt0aXZpdGV0JzsKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZl9wZXJzb24nKS5zZWxlY3RlZEluZGV4ID0gMDsKICAg',
  'ICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZl9kYXRlJykudmFsdWUgPSB0b2RheTsKICAgICAgfQoKICAgICAgc2V0VGltZW91dCgoKSA9PiBkb2N1',
  'bWVudC5nZXRFbGVtZW50QnlJZCgnZl90aXRsZScpLmZvY3VzKCksIDUwKTsKICAgIH0KCiAgICBmdW5jdGlvbiBjbG9zZURpYWxvZygpIHsKICAgICAgZG9j',
  'dW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RsZ0JhY2tkcm9wJykuY2xhc3NMaXN0LnJlbW92ZSgnc2hvdycpOwogICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92',
  'ZXJmbG93ID0gJyc7CiAgICAgIHN0YXRlLmVkaXRpbmdJdGVtID0gbnVsbDsKICAgIH0KCiAgICBmdW5jdGlvbiBoYW5kbGVTYXZlSXRlbShldmVudCkgewog',
  'ICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICBjb25zdCBmb3JtID0gZXZlbnQuY3VycmVudFRhcmdldDsKICAgICAgY29uc3QgZGF0YSA9IG5l',
  'dyBGb3JtRGF0YShmb3JtKTsKICAgICAgY29uc3QgcGF5bG9hZCA9IHsKICAgICAgICBpZDogc3RhdGUuZWRpdGluZ0l0ZW0gPyBzdGF0ZS5lZGl0aW5nSXRl',
  'bS5pZCA6IGBpdGVtXyR7RGF0ZS5ub3coKX1gLAogICAgICAgIHRpdGxlOiBkYXRhLmdldCgndGl0bGUnKS50b1N0cmluZygpLnRyaW0oKSwKICAgICAgICB0',
  'eXBlOiBub3JtYWxpc2VUeXBlKGRhdGEuZ2V0KCd0eXBlJykpLAogICAgICAgIHBlcnNvbklkOiBkYXRhLmdldCgncGVyc29uJyksCiAgICAgICAgZGF0ZTog',
  'ZGF0YS5nZXQoJ2RhdGUnKSwKICAgICAgICB0aW1lOiBkYXRhLmdldCgndGltZScpIHx8ICcnLAogICAgICAgIGR1cmF0aW9uOiBkYXRhLmdldCgnZHVyYXRp',
  'b24nKSA/IE51bWJlcihkYXRhLmdldCgnZHVyYXRpb24nKSkgOiAnJywKICAgICAgICBsb2NhdGlvbjogZGF0YS5nZXQoJ2xvY2F0aW9uJykgPyBkYXRhLmdl',
  'dCgnbG9jYXRpb24nKS50b1N0cmluZygpLnRyaW0oKSA6ICcnLAogICAgICAgIG5vdGU6IGRhdGEuZ2V0KCdub3RlJykgPyBkYXRhLmdldCgnbm90ZScpLnRv',
  'U3RyaW5nKCkudHJpbSgpIDogJycsCiAgICAgICAgcmVwZWF0OiBkYXRhLmdldCgncmVwZWF0JykgPT09ICdvbicsCiAgICAgICAgZG9uZTogZGF0YS5nZXQo',
  'J2RvbmUnKSA9PT0gJ29uJywKICAgICAgICBjcmVhdGVkQXQ6IHN0YXRlLmVkaXRpbmdJdGVtID8gc3RhdGUuZWRpdGluZ0l0ZW0uY3JlYXRlZEF0IDogbmV3',
  'IERhdGUoKS50b0lTT1N0cmluZygpLAogICAgICAgIHVwZGF0ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpCiAgICAgIH07CiAgICAgIGlmICghcGF5',
  'bG9hZC50aXRsZSkgewogICAgICAgIGFsZXJ0KCdUaXRlbCBza2FsIHVkZnlsZGVzLicpOwogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICBpZiAoIXBh',
  'eWxvYWQuZGF0ZSkgewogICAgICAgIGFsZXJ0KCdEYXRvIHNrYWwgdsOmbGdlcy4nKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGlmIChzdGF0',
  'ZS5lZGl0aW5nSXRlbSkgewogICAgICAgIGNvbnN0IGluZGV4ID0gc3RhdGUuaXRlbXMuZmluZEluZGV4KGl0ZW0gPT4gaXRlbS5pZCA9PT0gc3RhdGUuZWRp',
  'dGluZ0l0ZW0uaWQpOwogICAgICAgIGlmIChpbmRleCA+PSAwKSB7CiAgICAgICAgICBzdGF0ZS5pdGVtc1tpbmRleF0gPSBwYXlsb2FkOwogICAgICAgIH0K',
  'ICAgICAgfSBlbHNlIHsKICAgICAgICBzdGF0ZS5pdGVtcy5wdXNoKHBheWxvYWQpOwogICAgICB9CiAgICAgIHNhdmVJdGVtcygpOwogICAgICBjbG9zZURp',
  'YWxvZygpOwogICAgICByZW5kZXJXZWVrKCk7CiAgICAgIHVwZGF0ZVN5bmNCYWRnZSgnT0sg4oCTIGtsYXIgdGlsIHN5bmMnKTsKICAgIH0KCiAgICBmdW5j',
  'dGlvbiBoYW5kbGVEZWxldGVJdGVtKCkgewogICAgICBpZiAoIXN0YXRlLmVkaXRpbmdJdGVtKSByZXR1cm47CiAgICAgIGNvbnN0IGNvbmZpcm1EZWxldGUg',
  'PSBjb25maXJtKCdFciBkdSBzaWtrZXIgcMOlLCBhdCBkdSB2aWwgc2xldHRlIGRlbm5lIGFmdGFsZT8nKTsKICAgICAgaWYgKCFjb25maXJtRGVsZXRlKSBy',
  'ZXR1cm47CiAgICAgIHN0YXRlLml0ZW1zID0gc3RhdGUuaXRlbXMuZmlsdGVyKGl0ZW0gPT4gaXRlbS5pZCAhPT0gc3RhdGUuZWRpdGluZ0l0ZW0uaWQpOwog',
  'ICAgICBzYXZlSXRlbXMoKTsKICAgICAgY2xvc2VEaWFsb2coKTsKICAgICAgcmVuZGVyV2VlaygpOwogICAgICB1cGRhdGVTeW5jQmFkZ2UoJ1NsZXR0ZXQg',
  '4oCTIHN5bmMgYW5iZWZhbGVzJyk7CiAgICB9CgogICAgZnVuY3Rpb24gb3BlblNldHRpbmdzKCkgewogICAgICBjb25zdCBiYWNrZHJvcCA9IGRvY3VtZW50',
  'LmdldEVsZW1lbnRCeUlkKCdzZXR0aW5nc0JhY2tkcm9wJyk7CiAgICAgIGNvbnN0IGdyaWQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2V0dGluZ3NH',
  'cmlkJyk7CiAgICAgIGdyaWQuaW5uZXJIVE1MID0gJyc7CiAgICAgIGNvbnN0IHRlbXBsYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BlcnNvbkNh',
  'cmRUZW1wbGF0ZScpOwogICAgICBzdGF0ZS5wZW9wbGUuZm9yRWFjaChwZXJzb24gPT4gewogICAgICAgIGlmIChwZXJzb24uaWQgPT09ICdhbGwnKSByZXR1',
  'cm47CiAgICAgICAgY29uc3Qgbm9kZSA9IHRlbXBsYXRlLmNvbnRlbnQuZmlyc3RFbGVtZW50Q2hpbGQuY2xvbmVOb2RlKHRydWUpOwogICAgICAgIGNvbnN0',
  'IGF2YXRhckVsID0gbm9kZS5xdWVyeVNlbGVjdG9yKCcuYXZhdGFyJyk7CiAgICAgICAgY29uc3QgbmFtZUVsID0gbm9kZS5xdWVyeVNlbGVjdG9yKCcucGVy',
  'c29uLW5hbWUnKTsKICAgICAgICBjb25zdCBpZEVsID0gbm9kZS5xdWVyeVNlbGVjdG9yKCcucGVyc29uLWlkJyk7CiAgICAgICAgY29uc3QgaW5wdXROYW1l',
  'ID0gbm9kZS5xdWVyeVNlbGVjdG9yKCcuaW5wdXQtbmFtZScpOwogICAgICAgIGNvbnN0IGlucHV0QXZhdGFyID0gbm9kZS5xdWVyeVNlbGVjdG9yKCcuaW5w',
  'dXQtYXZhdGFyJyk7CiAgICAgICAgY29uc3QgaW5wdXRDb2xvciA9IG5vZGUucXVlcnlTZWxlY3RvcignLmlucHV0LWNvbG9yJyk7CgogICAgICAgIG5hbWVF',
  'bC50ZXh0Q29udGVudCA9IHBlcnNvbi5uYW1lOwogICAgICAgIGlkRWwudGV4dENvbnRlbnQgPSBgIyR7cGVyc29uLmlkfWA7CiAgICAgICAgaW5wdXROYW1l',
  'LnZhbHVlID0gcGVyc29uLm5hbWU7CiAgICAgICAgaW5wdXRDb2xvci52YWx1ZSA9IHBlcnNvbi5jb2xvcjsKICAgICAgICBhdmF0YXJFbC5zdHlsZS5iYWNr',
  'Z3JvdW5kID0gcGVyc29uLmNvbG9yOwogICAgICAgIGlmIChwZXJzb24uYXZhdGFyKSB7CiAgICAgICAgICBhdmF0YXJFbC5zdHlsZS5iYWNrZ3JvdW5kSW1h',
  'Z2UgPSBgdXJsKCR7cGVyc29uLmF2YXRhcn0pYDsKICAgICAgICAgIGF2YXRhckVsLnN0eWxlLmJhY2tncm91bmRTaXplID0gJ2NvdmVyJzsKICAgICAgICAg',
  'IGF2YXRhckVsLnN0eWxlLmJhY2tncm91bmRQb3NpdGlvbiA9ICdjZW50ZXInOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBhdmF0YXJFbC50ZXh0Q29u',
  'dGVudCA9IHBlcnNvbi5uYW1lLnNsaWNlKDAsIDEpLnRvVXBwZXJDYXNlKCk7CiAgICAgICAgfQoKICAgICAgICBpbnB1dEF2YXRhci5hZGRFdmVudExpc3Rl',
  'bmVyKCdjaGFuZ2UnLCAoZXYpID0+IGhhbmRsZUF2YXRhclVwbG9hZChldiwgcGVyc29uLmlkKSk7CiAgICAgICAgaW5wdXROYW1lLmRhdGFzZXQucGVyc29u',
  'SWQgPSBwZXJzb24uaWQ7CiAgICAgICAgaW5wdXRDb2xvci5kYXRhc2V0LnBlcnNvbklkID0gcGVyc29uLmlkOwogICAgICAgIGdyaWQuYXBwZW5kQ2hpbGQo',
  'bm9kZSk7CiAgICAgIH0pOwogICAgICBiYWNrZHJvcC5jbGFzc0xpc3QuYWRkKCdzaG93Jyk7CiAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cg',
  'PSAnaGlkZGVuJzsKICAgIH0KCiAgICBmdW5jdGlvbiBoYW5kbGVBdmF0YXJVcGxvYWQoZXZlbnQsIHBlcnNvbklkKSB7CiAgICAgIGNvbnN0IGZpbGUgPSBl',
  'dmVudC50YXJnZXQuZmlsZXNbMF07CiAgICAgIGlmICghZmlsZSkgcmV0dXJuOwogICAgICBjb25zdCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwogICAg',
  'ICByZWFkZXIub25sb2FkID0gKCkgPT4gewogICAgICAgIGNvbnN0IHBlcnNvbiA9IHN0YXRlLnBlb3BsZS5maW5kKHAgPT4gcC5pZCA9PT0gcGVyc29uSWQp',
  'OwogICAgICAgIGlmIChwZXJzb24pIHsKICAgICAgICAgIHBlcnNvbi5hdmF0YXIgPSByZWFkZXIucmVzdWx0OwogICAgICAgICAgY29uc3QgY2FyZCA9IGV2',
  'ZW50LnRhcmdldC5jbG9zZXN0KCcucGVyc29uLWNhcmQnKTsKICAgICAgICAgIGlmIChjYXJkKSB7CiAgICAgICAgICAgIGNvbnN0IGF2YXRhckVsID0gY2Fy',
  'ZC5xdWVyeVNlbGVjdG9yKCcuYXZhdGFyJyk7CiAgICAgICAgICAgIGlmIChhdmF0YXJFbCkgewogICAgICAgICAgICAgIGF2YXRhckVsLnN0eWxlLmJhY2tn',
  'cm91bmRJbWFnZSA9IGB1cmwoJHtyZWFkZXIucmVzdWx0fSlgOwogICAgICAgICAgICAgIGF2YXRhckVsLnN0eWxlLmJhY2tncm91bmRTaXplID0gJ2NvdmVy',
  'JzsKICAgICAgICAgICAgICBhdmF0YXJFbC5zdHlsZS5iYWNrZ3JvdW5kUG9zaXRpb24gPSAnY2VudGVyJzsKICAgICAgICAgICAgICBhdmF0YXJFbC50ZXh0',
  'Q29udGVudCA9ICcnOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9OwogICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChmaWxl',
  'KTsKICAgIH0KCiAgICBmdW5jdGlvbiBjbG9zZVNldHRpbmdzKCkgewogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2V0dGluZ3NCYWNrZHJvcCcp',
  'LmNsYXNzTGlzdC5yZW1vdmUoJ3Nob3cnKTsKICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdyA9ICcnOwogICAgfQoKICAgIGZ1bmN0aW9uIHNh',
  'dmVTZXR0aW5ncygpIHsKICAgICAgY29uc3QgbmFtZUlucHV0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJyNzZXR0aW5nc0dyaWQgLmlucHV0LW5h',
  'bWUnKTsKICAgICAgbmFtZUlucHV0cy5mb3JFYWNoKGlucHV0ID0+IHsKICAgICAgICBjb25zdCBwZXJzb24gPSBzdGF0ZS5wZW9wbGUuZmluZChwID0+IHAu',
  'aWQgPT09IGlucHV0LmRhdGFzZXQucGVyc29uSWQpOwogICAgICAgIGlmIChwZXJzb24pIHsKICAgICAgICAgIHBlcnNvbi5uYW1lID0gaW5wdXQudmFsdWUu',
  'dHJpbSgpIHx8IHBlcnNvbi5uYW1lOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIGNvbnN0IGNvbG9ySW5wdXRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rv',
  'ckFsbCgnI3NldHRpbmdzR3JpZCAuaW5wdXQtY29sb3InKTsKICAgICAgY29sb3JJbnB1dHMuZm9yRWFjaChpbnB1dCA9PiB7CiAgICAgICAgY29uc3QgcGVy',
  'c29uID0gc3RhdGUucGVvcGxlLmZpbmQocCA9PiBwLmlkID09PSBpbnB1dC5kYXRhc2V0LnBlcnNvbklkKTsKICAgICAgICBpZiAocGVyc29uKSB7CiAgICAg',
  'ICAgICBwZXJzb24uY29sb3IgPSBpbnB1dC52YWx1ZSB8fCBwZXJzb24uY29sb3I7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgY29uc3QgdG9TYXZlID0g',
  'c3RhdGUucGVvcGxlLmZpbHRlcihwID0+IHAuaWQgIT09ICdhbGwnKS5tYXAoKHsgaWQsIG5hbWUsIGNvbG9yLCBhdmF0YXIgfSkgPT4gKHsgaWQsIG5hbWUs',
  'IGNvbG9yLCBhdmF0YXI6IGF2YXRhciB8fCAnJyB9KSk7CiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKExTX1BSRUZTLCBKU09OLnN0cmluZ2lmeSh0b1Nh',
  'dmUpKTsKICAgICAgYnVpbGRQZXJzb25TZWxlY3QoKTsKICAgICAgcmVuZGVyUGVvcGxlQmFyKCk7CiAgICAgIHJlbmRlcldlZWsoKTsKICAgICAgY2xvc2VT',
  'ZXR0aW5ncygpOwogICAgfQoKICAgIGZ1bmN0aW9uIHVwZGF0ZVN5bmNCYWRnZShtZXNzYWdlKSB7CiAgICAgIGNvbnN0IGJhZGdlID0gZG9jdW1lbnQuZ2V0',
  'RWxlbWVudEJ5SWQoJ3N5bmNCYWRnZScpOwogICAgICBjb25zdCB0aW1lc3RhbXAgPSBuZXcgRGF0ZSgpLnRvTG9jYWxlVGltZVN0cmluZygnZGEtREsnLCB7',
  'IGhvdXI6ICcyLWRpZ2l0JywgbWludXRlOiAnMi1kaWdpdCcgfSk7CiAgICAgIGJhZGdlLnRleHRDb250ZW50ID0gYEdvb2dsZSBzeW5jOiAke21lc3NhZ2V9',
  'ICgke3RpbWVzdGFtcH0pYDsKICAgIH0KCiAgICBmdW5jdGlvbiBzY2hlZHVsZUF1dG9zeW5jKCkgewogICAgICBpZiAoc3RhdGUuYXV0b3N5bmNUaW1lcikg',
  'Y2xlYXJJbnRlcnZhbChzdGF0ZS5hdXRvc3luY1RpbWVyKTsKICAgICAgc3RhdGUuYXV0b3N5bmNUaW1lciA9IHNldEludGVydmFsKCgpID0+IHJ1blN5bmMo',
  'ZmFsc2UpLCBBVVRPU1lOQ19JTlRFUlZBTCk7CiAgICB9CgogICAgYXN5bmMgZnVuY3Rpb24gcnVuU3luYyhoYXJkKSB7CiAgICAgIGlmICghR0FTX1VSTCkg',
  'ewogICAgICAgIHVwZGF0ZVN5bmNCYWRnZSgn4oCUIChHQVMgVVJMIG1hbmdsZXIpJyk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHRyeSB7CiAg',
  'ICAgICAgdXBkYXRlU3luY0JhZGdlKCdTeW5rcm9uaXNlcmVy4oCmJyk7CiAgICAgICAgY29uc3QgcGF5bG9hZCA9IHsKICAgICAgICAgIG1ldGhvZDogJ1BP',
  'U1QnLAogICAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sCiAgICAgICAgICBib2R5OiBKU09OLnN0cmlu',
  'Z2lmeSh7CiAgICAgICAgICAgIGhhcmRSZXNldDogaGFyZCwKICAgICAgICAgICAgaXRlbXM6IHN0YXRlLml0ZW1zLAogICAgICAgICAgICBpbmRleDogaGFy',
  'ZCA/IG51bGwgOiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKExTX0dDQUxfSU5ERVgpIHx8ICdudWxsJykKICAgICAgICAgIH0pCiAgICAgICAg',
  'fTsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKEdBU19VUkwsIHBheWxvYWQpOwogICAgICAgIGlmICghcmVzcG9uc2Uub2spIHRocm93',
  'IG5ldyBFcnJvcihgSFRUUCAke3Jlc3BvbnNlLnN0YXR1c31gKTsKICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7CiAgICAg',
  'ICAgaWYgKHJlc3VsdC5pdGVtcykgewogICAgICAgICAgc3RhdGUuaXRlbXMgPSByZXN1bHQuaXRlbXM7CiAgICAgICAgICBzYXZlSXRlbXMoKTsKICAgICAg',
  'ICAgIHJlbmRlcldlZWsoKTsKICAgICAgICB9CiAgICAgICAgaWYgKHJlc3VsdC5pbmRleCkgewogICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oTFNf',
  'R0NBTF9JTkRFWCwgSlNPTi5zdHJpbmdpZnkocmVzdWx0LmluZGV4KSk7CiAgICAgICAgfQogICAgICAgIHVwZGF0ZVN5bmNCYWRnZSgnT0snKTsKICAgICAg',
  'fSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCdTeW5jLWZlamwnLCBlcnJvcik7CiAgICAgICAgdXBkYXRlU3luY0JhZGdlKGBmZWps',
  'IOKAkyAke2Vycm9yLm1lc3NhZ2V9YCk7CiAgICAgIH0KICAgIH0KICA8L3NjcmlwdD4KPC9ib2R5Pgo8L2h0bWw+Cg==',
].join('');

const FALLBACK_TEMPLATE = (message) => `<!DOCTYPE html><html lang="da"><head><meta charset="utf-8"><title>Kalender kunne ikke indlæses</title><style>body{font-family:Segoe UI,system-ui,-apple-system,BlinkMacSystemFont,sans-serif;margin:0;min-height:100vh;background:#0f172a;color:#f8fafc;display:flex;align-items:center;justify-content:center;text-align:center;padding:2rem;}section{max-width:520px;background:rgba(15,23,42,0.85);border:1px solid rgba(148,163,184,0.4);border-radius:20px;padding:2rem;box-shadow:0 25px 60px rgba(2,6,23,0.65);}h1{margin-top:0;font-size:1.6rem;}p{line-height:1.6;color:rgba(226,232,240,0.9);}code{display:block;margin-top:1rem;background:rgba(15,23,42,0.6);border-radius:12px;padding:1rem;font-size:0.85rem;word-break:break-word;}</style></head><body><section><h1>Kunne ikke indlæse kalenderen</h1><p>Der opstod en fejl ved indlæsning af familieoversigten. Prøv igen senere.</p><code>${message}</code></section></body></html>`;

let calendarLoaded = false;
let calendarError = null;
let previousFocus = null;

const overlay = document.getElementById('calendarOverlay');
const backBtn = document.getElementById('backBtn');
const openCalendarBtn = document.getElementById('openCalendar');
const calFrame = document.getElementById('calFrame');
const tiles = Array.from(document.querySelectorAll('.tile'));
const clockTime = document.getElementById('clockTime');
const clockDate = document.getElementById('clockDate');
const calendarBackdrop = document.querySelector('#calendarOverlay .calendar-backdrop');

function decodeBase64ToHtml(encoded) {
  const binary = atob(encoded);
  const bytes = Uint8Array.from(binary, char => char.charCodeAt(0));
  const decoder = new TextDecoder('utf-8');
  return decoder.decode(bytes);
}

function getCalendarHtml() {
  if (calendarError) {
    throw calendarError;
  }
  try {
    return decodeBase64ToHtml(CAL_B64);
  } catch (error) {
    calendarError = new Error(`Kunne ikke dekode kalenderen: ${error.message}`);
    throw calendarError;
  }
}

function loadCalendar() {
  if (calendarLoaded) {
    return;
  }
  try {
    calFrame.srcdoc = getCalendarHtml();
  } catch (error) {
    console.error(error);
    calFrame.srcdoc = FALLBACK_TEMPLATE(error.message);
  } finally {
    calendarLoaded = true;
  }
}

function showCalendar(show) {
  if (show) {
    previousFocus = document.activeElement instanceof HTMLElement ? document.activeElement : null;
    overlay.hidden = false;
    document.body.style.overflow = 'hidden';
    loadCalendar();
    window.setTimeout(() => backBtn.focus(), 50);
  } else {
    overlay.hidden = true;
    document.body.style.overflow = '';
    if (previousFocus) {
      previousFocus.focus();
    }
    previousFocus = null;
  }
}

function ensureTileAccessibility(tile) {
  tile.setAttribute('tabindex', '0');
  tile.addEventListener('keydown', (event) => {
    if (event.key === 'Enter' || event.key === ' ') {
      event.preventDefault();
      tile.click();
    }
(() => {
  const SLIDES = [
    {
      title: 'Velkommen til Nordlys Kontorhus',
      body: [
        'Tjek ind når du møder ind og husk at tjekke ud, når du forlader huset.',
        'Giv gerne gæster besked om kaffebaren i loungeområdet på 1. sal.',
      ],
      kicker: 'Kantinen i dag: Grøn bowls med bagt laks og urtecreme.',
    },
    {
      title: 'Dagens overblik',
      list: [
        '09.00 – Salgsmøde i Havstuen',
        '11.30 – Frokostservering',
        '14.00 – Design review, projektrum Nord',
      ],
      body: 'Hold øje med infoskærmen for spontane aktiviteter og gæsteankomster.',
    },
    {
      title: 'Sikkerhed & trivsel',
      body: [
        'Udpeg en brandvagt i dit team, og gennemgå flugtveje kvartalsvist.',
        'Meld fravær her i panelet, så kollegaer og gæster ved, hvem der er til stede.',
      ],
      kicker: 'Nødtelefon: 45 11 00 11 · Førstehjælpstaske findes ved receptionen.',
    },
  ];

  const absenceLabels = {
    sick: 'Syg',
    parental: 'Barsel',
    vacation: 'Ferie',
    remote: 'Hjemmearbejde',
    other: 'Fravær',
  };

  const elements = {};
  let state = { branding: { logo: '' }, employees: [], absences: [] };
  let indicatorButtons = [];
  let slideIndex = 0;
  let slideIntervalId = null;
  let reduceMotionPreferred = false;
  let currentEmployeeId = null;
  let isAuthenticated = false;
  let shouldRemoveEmployeePhoto = false;

  document.addEventListener('DOMContentLoaded', () => {
    init().catch((error) => {
      console.error('Kunne ikke initialisere kiosken', error);
    });
  });
}

function updateClock() {
  const now = new Date();
  const time = now.toLocaleTimeString('da-DK', { hour: '2-digit', minute: '2-digit' });
  const dateText = now.toLocaleDateString('da-DK', { weekday: 'long', day: 'numeric', month: 'long', year: 'numeric' });
  clockTime.textContent = time;
  clockDate.textContent = dateText.charAt(0).toUpperCase() + dateText.slice(1);
}

function openSonos() {
  const isAndroid = /Android/i.test(navigator.userAgent || '');
  if (!isAndroid) {
    alert('SONOS-linken virker kun på Android-enheder.');
    return;
  }
  const intentUrl = 'intent://#Intent;package=com.sonos.acr;scheme=sonos;end';
  const fallbackUrl = 'sonos://';
  let fallbackTimer;
  try {
    window.location.href = intentUrl;
    fallbackTimer = window.setTimeout(() => {
      window.location.href = fallbackUrl;
    }, 400);
    window.setTimeout(() => window.clearTimeout(fallbackTimer), 2000);
  } catch (error) {
    if (fallbackTimer) {
      window.clearTimeout(fallbackTimer);
    }
    alert('Kunne ikke åbne SONOS. Prøv fra en Android-enhed.');
  }
}

function openHomeyPlaceholder() {
  alert('Homey-integration kommer senere.');
}

function setupTiles() {
  tiles.forEach(ensureTileAccessibility);
}

openCalendarBtn.addEventListener('click', () => showCalendar(true));
backBtn.addEventListener('click', () => showCalendar(false));
if (calendarBackdrop) {
  calendarBackdrop.addEventListener('click', () => showCalendar(false));
}
document.getElementById('openSonos').addEventListener('click', openSonos);
document.getElementById('openHome').addEventListener('click', openHomeyPlaceholder);

document.addEventListener('keydown', (event) => {
  if (event.key === 'Escape' && !overlay.hidden) {

  async function init() {
    cacheElements();
    setAuthenticated(false);
    renderEmployeePhotoPreview('');
    bindScreenToggle();
    setupCarouselMotionPreference();
    bindLogin();
    bindAdminPanel();
    updateClock();
    window.setInterval(updateClock, 1000 * 15);
    buildIndicators();
    renderSlide();

    try {
      await refreshSession();
      await refreshState();
    } catch (error) {
      console.error('Kunne ikke hente data fra serveren', error);
      window.alert('Kunne ikke hente data fra serveren. Kontroller forbindelsen og prøv igen.');
      refreshUI();
    }

    startCarousel();
  }

  function cacheElements() {
    elements.slidesScreen = document.getElementById('slidesScreen');
    elements.boardScreen = document.getElementById('boardScreen');
    elements.openBoard = document.getElementById('openBoard');
    elements.closeBoard = document.getElementById('closeBoard');
    elements.slidesBrand = document.getElementById('slidesBrand');
    elements.slidesLogo = document.getElementById('slidesLogo');
    elements.boardLogo = document.getElementById('boardLogo');
    elements.slidesClockTime = document.getElementById('slidesClockTime');
    elements.slidesClockDate = document.getElementById('slidesClockDate');
    elements.boardClockTime = document.getElementById('boardClockTime');
    elements.boardClockDate = document.getElementById('boardClockDate');
    elements.fullScreenSlide = document.getElementById('fullScreenSlide');
    elements.infoSlide = document.getElementById('infoSlide');
    elements.slideIndicators = document.getElementById('slideIndicators');
    elements.departmentList = document.getElementById('departmentList');
    elements.adminOverlay = document.getElementById('adminOverlay');
    elements.openAdmin = document.getElementById('openAdmin');
    elements.closeAdmin = document.getElementById('closeAdmin');
    elements.logoutBtn = document.getElementById('logoutBtn');
    elements.logoUpload = document.getElementById('logoUpload');
    elements.removeLogo = document.getElementById('removeLogo');
    elements.logoPreview = document.getElementById('logoPreview');
    elements.employeeForm = document.getElementById('employeeForm');
    elements.employeeSelect = document.getElementById('employeeSelect');
    elements.employeeName = document.getElementById('employeeName');
    elements.employeeDepartment = document.getElementById('employeeDepartment');
    elements.employeeRole = document.getElementById('employeeRole');
    elements.employeePhoto = document.getElementById('employeePhoto');
    elements.employeePhotoPreview = document.getElementById('employeePhotoPreview');
    elements.removeEmployeePhoto = document.getElementById('removeEmployeePhoto');
    elements.deleteEmployee = document.getElementById('deleteEmployee');
    elements.absenceForm = document.getElementById('absenceForm');
    elements.absenceEmployee = document.getElementById('absenceEmployee');
    elements.absenceFrom = document.getElementById('absenceFrom');
    elements.absenceTo = document.getElementById('absenceTo');
    elements.absenceReason = document.getElementById('absenceReason');
    elements.absenceList = document.getElementById('absenceList');
    elements.loginOverlay = document.getElementById('loginOverlay');
    elements.closeLogin = document.getElementById('closeLogin');
    elements.loginForm = document.getElementById('loginForm');
    elements.loginUsername = document.getElementById('loginUsername');
    elements.loginPassword = document.getElementById('loginPassword');
    elements.loginError = document.getElementById('loginError');
  }

  function updateClock() {
    const now = new Date();
    const timeFormatter = new Intl.DateTimeFormat('da-DK', {
      hour: '2-digit',
      minute: '2-digit',
    });
    const dateFormatter = new Intl.DateTimeFormat('da-DK', {
      weekday: 'long',
      day: 'numeric',
      month: 'long',
    });

    const time = timeFormatter.format(now);
    const date = capitalizeFirstLetter(dateFormatter.format(now));

    if (elements.slidesClockTime) {
      elements.slidesClockTime.textContent = time;
    }
    if (elements.slidesClockDate) {
      elements.slidesClockDate.textContent = date;
    }
    if (elements.boardClockTime) {
      elements.boardClockTime.textContent = time;
    }
    if (elements.boardClockDate) {
      elements.boardClockDate.textContent = date;
    }
  }

  function renderSlide() {
    const slide = SLIDES[slideIndex % SLIDES.length];
    renderSlideInto(elements.infoSlide, slide, 'h3');
    renderSlideInto(elements.fullScreenSlide, slide, 'h2');
  }

  function renderSlideInto(container, slide, headingLevel = 'h3') {
    if (!container) {
      return;
    }
    container.innerHTML = '';

    const title = document.createElement(headingLevel);
    title.textContent = slide.title;
    container.appendChild(title);

    if (slide.body) {
      const paragraphs = Array.isArray(slide.body) ? slide.body : [slide.body];
      paragraphs.forEach((text) => {
        const p = document.createElement('p');
        p.textContent = text;
        container.appendChild(p);
      });
    }

    if (slide.list) {
      const list = document.createElement('ul');
      slide.list.forEach((item) => {
        const li = document.createElement('li');
        li.textContent = item;
        list.appendChild(li);
      });
      container.appendChild(list);
    }

    if (slide.kicker) {
      const kicker = document.createElement('p');
      kicker.className = 'slide-kicker';
      kicker.textContent = slide.kicker;
      container.appendChild(kicker);
    }
  }

  function renderBranding() {
    const logo = state.branding?.logo || '';
    if (elements.slidesBrand) {
      elements.slidesBrand.hidden = !logo;
    }
    updateLogoImage(elements.slidesLogo, logo);
    updateLogoImage(elements.boardLogo, logo);
    updateLogoPreview(logo);
    if (elements.removeLogo) {
      elements.removeLogo.disabled = !logo;
    }
  }

  function updateLogoImage(target, logo) {
    if (!target) {
      return;
    }
    if (logo) {
      target.src = logo;
      target.hidden = false;
    } else {
      target.hidden = true;
      target.removeAttribute('src');
    }
  }

  function updateLogoPreview(logo) {
    if (!elements.logoPreview) {
      return;
    }
    elements.logoPreview.innerHTML = '';
    if (logo) {
      const img = document.createElement('img');
      img.src = logo;
      img.alt = 'Aktivt logo';
      elements.logoPreview.appendChild(img);
      return;
    }
    const placeholder = document.createElement('p');
    placeholder.className = 'logo-placeholder';
    placeholder.textContent = 'Intet logo valgt endnu.';
    elements.logoPreview.appendChild(placeholder);
  }

  function buildIndicators() {
    if (!elements.slideIndicators) {
      return;
    }
    elements.slideIndicators.innerHTML = '';
    indicatorButtons = SLIDES.map((_, index) => {
      const button = document.createElement('button');
      button.type = 'button';
      button.setAttribute('role', 'tab');
      button.setAttribute('aria-label', `Vis slide ${index + 1} af ${SLIDES.length}`);
      button.addEventListener('click', () => {
        goToSlide(index);
      });
      elements.slideIndicators.appendChild(button);
      return button;
    });
    updateIndicators();
  }

  function updateIndicators() {
    indicatorButtons.forEach((button, index) => {
      const active = index === slideIndex % SLIDES.length;
      button.setAttribute('aria-selected', active ? 'true' : 'false');
    });
  }

  function goToSlide(index) {
    slideIndex = index % SLIDES.length;
    renderSlide();
    updateIndicators();
    restartCarousel();
  }

  function nextSlide() {
    slideIndex = (slideIndex + 1) % SLIDES.length;
    renderSlide();
    updateIndicators();
  }

  function startCarousel() {
    if (SLIDES.length <= 1 || reduceMotionPreferred) {
      return;
    }
    clearInterval(slideIntervalId);
    slideIntervalId = window.setInterval(nextSlide, 12000);
  }

  function restartCarousel() {
    clearInterval(slideIntervalId);
    startCarousel();
  }

  function setupCarouselMotionPreference() {
    const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');
    reduceMotionPreferred = mediaQuery.matches;
    if (reduceMotionPreferred) {
      clearInterval(slideIntervalId);
    }
    mediaQuery.addEventListener('change', (event) => {
      reduceMotionPreferred = event.matches;
      if (reduceMotionPreferred) {
        clearInterval(slideIntervalId);
      } else {
        restartCarousel();
      }
    });
  }

  async function refreshSession() {
    try {
      const response = await fetch('/api/session', { credentials: 'same-origin' });
      if (!response.ok) {
        setAuthenticated(false);
        return;
      }
      const data = await response.json();
      setAuthenticated(Boolean(data.authenticated));
    } catch (error) {
      console.warn('Kunne ikke kontrollere loginstatus', error);
      setAuthenticated(false);
    }
  }

  async function refreshState() {
    const response = await fetch('/api/state', { credentials: 'same-origin' });
    if (!response.ok) {
      throw new Error('Serveren returnerede en fejlstatus');
    }
    const data = await response.json();
    applyState(data);
    refreshUI();
  }

  function applyState(data) {
    state = {
      branding: data?.branding || { logo: '' },
      employees: Array.isArray(data?.employees) ? data.employees : [],
      absences: Array.isArray(data?.absences) ? data.absences : [],
    };
  }

  function refreshUI() {
    renderBranding();
    renderStaffBoard();
    populateEmployeeSelect();
    populateAbsenceEmployeeOptions();
    renderAbsenceList();
  }

  function renderStaffBoard() {
    if (!elements.departmentList) {
      return;
    }
    const container = elements.departmentList;
    container.innerHTML = '';

    if (!state.employees.length) {
      const empty = document.createElement('p');
      empty.className = 'panel-description';
      empty.textContent = 'Ingen medarbejdere oprettet endnu.';
      container.appendChild(empty);
      return;
    }

    const grouped = groupEmployeesByDepartment(state.employees);
    grouped.forEach((group) => {
      const section = document.createElement('section');
      section.className = 'department';

      const header = document.createElement('header');
      header.className = 'department-header';

      const title = document.createElement('h3');
      title.className = 'department-name';
      title.textContent = group.name;
      header.appendChild(title);

      const count = document.createElement('p');
      count.className = 'employee-count';
      const amount = group.employees.length;
      count.textContent = `${amount} ${amount === 1 ? 'person' : 'personer'}`;
      header.appendChild(count);

      section.appendChild(header);

      const grid = document.createElement('div');
      grid.className = 'employee-grid';
      group.employees
        .slice()
        .sort((a, b) => a.name.localeCompare(b.name, 'da', { sensitivity: 'base' }))
        .forEach((employee) => {
          grid.appendChild(createEmployeeCard(employee));
        });

      section.appendChild(grid);
      container.appendChild(section);
    });
  }

  function groupEmployeesByDepartment(employees) {
    const map = new Map();
    employees.forEach((employee) => {
      const name = (employee.department || 'Øvrige').trim() || 'Øvrige';
      const key = name.toLocaleLowerCase('da-DK');
      if (!map.has(key)) {
        map.set(key, { name, employees: [] });
      }
      map.get(key).employees.push(employee);
    });
    return Array.from(map.values()).sort((a, b) => a.name.localeCompare(b.name, 'da', { sensitivity: 'base' }));
  }

  function createEmployeeCard(employee) {
    const card = document.createElement('article');
    card.className = 'employee-card';

    const photo = document.createElement('div');
    photo.className = 'employee-photo';
    if (employee.photo) {
      const img = document.createElement('img');
      img.src = employee.photo;
      img.alt = `Foto af ${employee.name}`;
      photo.appendChild(img);
    } else {
      photo.textContent = initialsFromName(employee.name);
      photo.setAttribute('aria-hidden', 'true');
    }
    card.appendChild(photo);

    const info = document.createElement('div');
    info.className = 'employee-info';
    const nameEl = document.createElement('p');
    nameEl.className = 'employee-name';
    nameEl.textContent = employee.name;
    info.appendChild(nameEl);
    const roleEl = document.createElement('p');
    roleEl.className = 'employee-role';
    roleEl.textContent = employee.role;
    info.appendChild(roleEl);
    card.appendChild(info);

    const status = determineStatus(employee);
    const statusEl = document.createElement('span');
    statusEl.className = `employee-status ${status.className}`;
    statusEl.textContent = status.label;
    card.appendChild(statusEl);

    const actionBtn = document.createElement('button');
    actionBtn.type = 'button';
    actionBtn.className = 'check-btn';
    if (status.type === 'absent') {
      actionBtn.textContent = 'Fravær registreret';
      actionBtn.disabled = true;
    } else {
      actionBtn.textContent = employee.isCheckedIn ? 'Tjek ud' : 'Tjek ind';
      actionBtn.addEventListener('click', () => {
        toggleCheck(employee.id).catch((error) => {
          console.error('Kunne ikke opdatere status', error);
          window.alert('Kunne ikke opdatere status. Prøv igen.');
        });
      });
    }
    card.appendChild(actionBtn);

    return card;
  }

  function determineStatus(employee) {
    const absence = getActiveAbsence(employee.id);
    if (absence) {
      const label = absenceLabels[absence.reason] || absenceLabels.other;
      return { type: 'absent', label: `Fravær · ${label}`, className: 'absent' };
    }
    if (employee.isCheckedIn) {
      return { type: 'present', label: 'Til stede', className: 'present' };
    }
    return { type: 'away', label: 'Ikke i huset', className: 'away' };
  }

  async function toggleCheck(employeeId) {
    const employee = state.employees.find((item) => item.id === employeeId);
    if (!employee) {
      return;
    }
    const response = await fetch(`/api/employees/${encodeURIComponent(employeeId)}/status`, {
      method: 'PATCH',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ isCheckedIn: !employee.isCheckedIn }),
      credentials: 'same-origin',
    });
    if (!response.ok) {
      throw new Error('Serveren afviste statusopdateringen');
    }
    await refreshState();
  }

  function getActiveAbsence(employeeId) {
    const now = new Date();
    return state.absences.find((absence) => {
      if (absence.employeeId !== employeeId) {
        return false;
      }
      const from = toDate(absence.from);
      const to = toDate(absence.to);
      to.setHours(23, 59, 59, 999);
      return now >= from && now <= to;
    });
  }

  function bindScreenToggle() {
    if (elements.openBoard) {
      elements.openBoard.addEventListener('click', showBoardScreen);
    }
    if (elements.closeBoard) {
      elements.closeBoard.addEventListener('click', showSlidesScreen);
    }
  }

  function showBoardScreen() {
    if (elements.slidesScreen) {
      elements.slidesScreen.hidden = true;
    }
    if (elements.boardScreen) {
      elements.boardScreen.hidden = false;
    }
  }

  function showSlidesScreen() {
    if (elements.boardScreen) {
      elements.boardScreen.hidden = true;
    }
    if (elements.slidesScreen) {
      elements.slidesScreen.hidden = false;
    }
  }

  function bindAdminPanel() {
    if (!elements.adminOverlay) {
      return;
    }
    const overlay = elements.adminOverlay;
    const backdrop = overlay.querySelector('[data-close-overlay]');

    elements.openAdmin?.addEventListener('click', requestAdminOverlay);
    elements.closeAdmin?.addEventListener('click', hideAdminOverlay);
    backdrop?.addEventListener('click', hideAdminOverlay);

    elements.logoUpload?.addEventListener('change', handleLogoUpload);
    elements.removeLogo?.addEventListener('click', handleLogoRemove);
    elements.employeeSelect?.addEventListener('change', handleEmployeeSelection);
    elements.employeeForm?.addEventListener('submit', handleEmployeeSubmit);
    elements.deleteEmployee?.addEventListener('click', handleEmployeeDelete);
    elements.employeePhoto?.addEventListener('change', handleEmployeeFileChange);
    elements.removeEmployeePhoto?.addEventListener('click', handleRemoveEmployeePhoto);
    elements.absenceForm?.addEventListener('submit', handleAbsenceSubmit);
    elements.logoutBtn?.addEventListener('click', handleLogout);

    document.addEventListener('keydown', (event) => {
      if (event.key === 'Escape') {
        if (!overlay.hidden) {
          hideAdminOverlay();
        } else if (elements.loginOverlay && !elements.loginOverlay.hidden) {
          closeLoginOverlay();
        }
      }
    });
  }

  async function requestAdminOverlay() {
    await refreshSession();
    if (!isAuthenticated) {
      openLoginOverlay();
      return;
    }
    showAdminOverlay();
  }

  function showAdminOverlay() {
    if (!elements.adminOverlay) {
      return;
    }
    elements.adminOverlay.hidden = false;
    shouldRemoveEmployeePhoto = false;
    if (elements.employeePhoto) {
      elements.employeePhoto.value = '';
    }
    syncEmployeeSelection();
    window.setTimeout(() => {
      elements.employeeSelect?.focus();
    }, 50);
  }

  function hideAdminOverlay() {
    if (!elements.adminOverlay) {
      return;
    }
    elements.adminOverlay.hidden = true;
  }

  function bindLogin() {
    if (!elements.loginOverlay) {
      return;
    }
    const backdrop = elements.loginOverlay.querySelector('[data-close-overlay]');
    backdrop?.addEventListener('click', closeLoginOverlay);
    elements.closeLogin?.addEventListener('click', closeLoginOverlay);
    elements.loginForm?.addEventListener('submit', handleLoginSubmit);
  }

  function openLoginOverlay() {
    if (!elements.loginOverlay) {
      return;
    }
    hideLoginError();
    elements.loginOverlay.hidden = false;
    window.setTimeout(() => {
      elements.loginUsername?.focus();
    }, 50);
  }

  function closeLoginOverlay() {
    if (!elements.loginOverlay) {
      return;
    }
    elements.loginOverlay.hidden = true;
    elements.loginForm?.reset();
    hideLoginError();
  }

  async function handleLoginSubmit(event) {
    event.preventDefault();
    showCalendar(false);
    const username = elements.loginUsername?.value.trim();
    const password = elements.loginPassword?.value;
    if (!username || !password) {
      return;
    }
    try {
      const response = await fetch('/api/login', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ username, password }),
        credentials: 'same-origin',
      });
      if (!response.ok) {
        throw new Error('Ugyldigt login');
      }
      setAuthenticated(true);
      closeLoginOverlay();
      showAdminOverlay();
    } catch (error) {
      console.error('Login mislykkedes', error);
      showLoginError();
    }
  }

  async function handleLogout() {
    try {
      await fetch('/api/logout', { method: 'POST', credentials: 'same-origin' });
    } catch (error) {
      console.warn('Kunne ikke logge ud', error);
    } finally {
      setAuthenticated(false);
      hideAdminOverlay();
    }
  }

  function hideLoginError() {
    if (elements.loginError) {
      elements.loginError.hidden = true;
    }
  }

  function showLoginError() {
    if (elements.loginError) {
      elements.loginError.hidden = false;
    }
  }

  async function handleLogoUpload(event) {
    const input = event.target;
    const file = input.files && input.files[0];
    if (!file) {
      return;
    }
    const formData = new FormData();
    formData.append('logo', file);
    try {
      const response = await fetch('/api/branding/logo', {
        method: 'POST',
        body: formData,
        credentials: 'same-origin',
      });
      if (response.status === 401) {
        handleUnauthorised();
        throw new Error('Kræver login');
      }
      if (!response.ok) {
        throw new Error('Kunne ikke uploade logo');
      }
      await refreshState();
    } catch (error) {
      console.error('Fejl ved upload af logo', error);
      window.alert('Kunne ikke uploade logo. Prøv med en anden fil.');
    } finally {
      input.value = '';
    }
  }

  async function handleLogoRemove() {
    try {
      const response = await fetch('/api/branding/logo', {
        method: 'DELETE',
        credentials: 'same-origin',
      });
      if (response.status === 401) {
        handleUnauthorised();
        throw new Error('Kræver login');
      }
      if (!response.ok) {
        throw new Error('Kunne ikke fjerne logo');
      }
      await refreshState();
    } catch (error) {
      console.error('Fejl ved fjernelse af logo', error);
      window.alert('Kunne ikke fjerne logo lige nu.');
    }
  }

  function handleEmployeeSelection() {
    const value = elements.employeeSelect?.value;
    if (!value || value === '__new') {
      currentEmployeeId = null;
      setEmployeeFormValues(null);
      return;
    }
    currentEmployeeId = value;
    const employee = state.employees.find((item) => item.id === value) || null;
    setEmployeeFormValues(employee);
  }

  function setEmployeeFormValues(employee) {
    if (!elements.employeeName || !elements.employeeDepartment || !elements.employeeRole) {
      return;
    }
    elements.employeeName.value = employee?.name ?? '';
    elements.employeeDepartment.value = employee?.department ?? '';
    elements.employeeRole.value = employee?.role ?? '';
    shouldRemoveEmployeePhoto = false;
    if (elements.employeePhoto) {
      elements.employeePhoto.value = '';
    }
    renderEmployeePhotoPreview(employee?.photo || '');
    if (elements.deleteEmployee) {
      elements.deleteEmployee.disabled = !employee;
    }
  }
});

setupTiles();
updateClock();
window.setInterval(updateClock, 1000);
  function renderEmployeePhotoPreview(photo) {
    if (!elements.employeePhotoPreview) {
      return;
    }
    elements.employeePhotoPreview.innerHTML = '';
    if (photo) {
      const img = document.createElement('img');
      img.src = photo;
      img.alt = '';
      elements.employeePhotoPreview.appendChild(img);
      elements.employeePhotoPreview.removeAttribute('aria-hidden');
    } else {
      const placeholder = document.createElement('p');
      placeholder.className = 'photo-placeholder';
      placeholder.textContent = 'Intet billede valgt endnu.';
      elements.employeePhotoPreview.appendChild(placeholder);
      elements.employeePhotoPreview.setAttribute('aria-hidden', 'false');
    }
    if (elements.removeEmployeePhoto) {
      elements.removeEmployeePhoto.disabled = !photo;
    }
  }

window.showCalendar = showCalendar;
window.getCalendarHtml = getCalendarHtml;
  function handleEmployeeFileChange() {
    shouldRemoveEmployeePhoto = false;
    const file = elements.employeePhoto?.files && elements.employeePhoto.files[0];
    if (!file) {
      const employee = currentEmployeeId ? state.employees.find((item) => item.id === currentEmployeeId) : null;
      renderEmployeePhotoPreview(employee?.photo || '');
      return;
    }
    if (file.type && !file.type.startsWith('image/')) {
      window.alert('Vælg venligst en billedfil.');
      if (elements.employeePhoto) {
        elements.employeePhoto.value = '';
      }
      return;
    }
    const reader = new FileReader();
    reader.addEventListener('load', () => {
      if (typeof reader.result === 'string') {
        renderEmployeePhotoPreview(reader.result);
      }
    });
    reader.readAsDataURL(file);
  }

  function handleRemoveEmployeePhoto() {
    if (!elements.removeEmployeePhoto || elements.removeEmployeePhoto.disabled) {
      return;
    }
    if (elements.employeePhoto) {
      elements.employeePhoto.value = '';
    }
    shouldRemoveEmployeePhoto = Boolean(currentEmployeeId);
    renderEmployeePhotoPreview('');
  }

  async function handleEmployeeSubmit(event) {
    event.preventDefault();
    const name = elements.employeeName?.value.trim();
    const department = elements.employeeDepartment?.value.trim() || 'Øvrige';
    const role = elements.employeeRole?.value.trim();
    if (!name || !role) {
      window.alert('Navn og stilling skal udfyldes.');
      return;
    }
    const isNew = !currentEmployeeId;
    const file = elements.employeePhoto?.files && elements.employeePhoto.files[0];
    const formData = new FormData();
    formData.append('name', name);
    formData.append('department', department);
    formData.append('role', role);
    if (file) {
      formData.append('photo', file);
    } else if (!isNew && shouldRemoveEmployeePhoto) {
      formData.append('removePhoto', 'true');
    }

    try {
      const endpoint = isNew ? '/api/employees' : `/api/employees/${encodeURIComponent(currentEmployeeId)}`;
      const method = isNew ? 'POST' : 'PUT';
      const response = await fetch(endpoint, {
        method,
        body: formData,
        credentials: 'same-origin',
      });
      if (response.status === 401) {
        handleUnauthorised();
        throw new Error('Kræver login');
      }
      if (!response.ok) {
        throw new Error('Kunne ikke gemme medarbejderen');
      }
      const data = await response.json();
      if (data?.employee?.id) {
        currentEmployeeId = data.employee.id;
      }
      shouldRemoveEmployeePhoto = false;
      if (elements.employeePhoto) {
        elements.employeePhoto.value = '';
      }
      await refreshState();
    } catch (error) {
      console.error('Fejl ved gem af medarbejder', error);
      window.alert('Kunne ikke gemme medarbejderen. Prøv igen.');
    }
  }

  async function handleEmployeeDelete() {
    if (!currentEmployeeId) {
      return;
    }
    const employee = state.employees.find((item) => item.id === currentEmployeeId);
    if (!employee) {
      return;
    }
    const confirmed = window.confirm(`Er du sikker på, at du vil slette ${employee.name}?`);
    if (!confirmed) {
      return;
    }
    try {
      const response = await fetch(`/api/employees/${encodeURIComponent(currentEmployeeId)}`, {
        method: 'DELETE',
        credentials: 'same-origin',
      });
      if (response.status === 401) {
        handleUnauthorised();
        throw new Error('Kræver login');
      }
      if (!response.ok) {
        throw new Error('Kunne ikke slette medarbejderen');
      }
      currentEmployeeId = null;
      shouldRemoveEmployeePhoto = false;
      if (elements.employeePhoto) {
        elements.employeePhoto.value = '';
      }
      await refreshState();
    } catch (error) {
      console.error('Fejl ved sletning af medarbejder', error);
      window.alert('Kunne ikke slette medarbejderen.');
    }
  }

  async function handleAbsenceSubmit(event) {
    event.preventDefault();
    const employeeId = elements.absenceEmployee?.value;
    const from = elements.absenceFrom?.value;
    const to = elements.absenceTo?.value;
    const reason = elements.absenceReason?.value || 'other';
    if (!employeeId || !from || !to) {
      window.alert('Vælg medarbejder og datoer for fraværet.');
      return;
    }
    if (new Date(from) > new Date(to)) {
      window.alert('Slutdato skal være efter startdato.');
      return;
    }
    try {
      const response = await fetch('/api/absences', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ employeeId, from, to, reason }),
        credentials: 'same-origin',
      });
      if (response.status === 401) {
        handleUnauthorised();
        throw new Error('Kræver login');
      }
      if (!response.ok) {
        throw new Error('Kunne ikke registrere fravær');
      }
      elements.absenceForm?.reset();
      await refreshState();
    } catch (error) {
      console.error('Fejl ved registrering af fravær', error);
      window.alert('Kunne ikke registrere fravær. Prøv igen.');
    }
  }

  function populateEmployeeSelect() {
    if (!elements.employeeSelect) {
      return;
    }
    elements.employeeSelect.innerHTML = '';
    const newOption = document.createElement('option');
    newOption.value = '__new';
    newOption.textContent = '➕ Ny medarbejder';
    elements.employeeSelect.appendChild(newOption);

    const sorted = state.employees
      .slice()
      .sort((a, b) => a.name.localeCompare(b.name, 'da', { sensitivity: 'base' }));

    sorted.forEach((employee) => {
      const option = document.createElement('option');
      option.value = employee.id;
      option.textContent = `${employee.name} · ${employee.department}`;
      elements.employeeSelect.appendChild(option);
    });

    const exists = currentEmployeeId && sorted.some((employee) => employee.id === currentEmployeeId);
    if (!exists) {
      currentEmployeeId = null;
    }

    if (currentEmployeeId) {
      elements.employeeSelect.value = currentEmployeeId;
      const employee = state.employees.find((item) => item.id === currentEmployeeId) || null;
      setEmployeeFormValues(employee);
    } else {
      elements.employeeSelect.value = '__new';
      setEmployeeFormValues(null);
    }
  }

  function populateAbsenceEmployeeOptions() {
    if (!elements.absenceEmployee) {
      return;
    }
    elements.absenceEmployee.innerHTML = '';
    const placeholder = document.createElement('option');
    placeholder.value = '';
    placeholder.textContent = 'Vælg medarbejder';
    placeholder.disabled = true;
    placeholder.selected = true;
    elements.absenceEmployee.appendChild(placeholder);

    state.employees
      .slice()
      .sort((a, b) => a.name.localeCompare(b.name, 'da', { sensitivity: 'base' }))
      .forEach((employee) => {
        const option = document.createElement('option');
        option.value = employee.id;
        option.textContent = `${employee.name} · ${employee.department}`;
        elements.absenceEmployee.appendChild(option);
      });
  }

  function renderAbsenceList() {
    if (!elements.absenceList) {
      return;
    }
    elements.absenceList.innerHTML = '';
    if (!state.absences.length) {
      const empty = document.createElement('li');
      empty.className = 'absence-item absence-empty';
      empty.textContent = 'Ingen registreret fravær.';
      elements.absenceList.appendChild(empty);
      return;
    }

    state.absences
      .slice()
      .sort((a, b) => a.from.localeCompare(b.from))
      .forEach((absence) => {
        const employee = state.employees.find((item) => item.id === absence.employeeId);
        if (!employee) {
          return;
        }
        const item = document.createElement('li');
        item.className = 'absence-item';

        const meta = document.createElement('div');
        meta.className = 'absence-meta';
        const name = document.createElement('strong');
        name.textContent = employee.name;
        meta.appendChild(name);
        const span = document.createElement('span');
        span.textContent = `${absenceLabels[absence.reason] || absenceLabels.other} · ${formatDateRange(absence.from, absence.to)}`;
        meta.appendChild(span);
        item.appendChild(meta);

        const removeBtn = document.createElement('button');
        removeBtn.type = 'button';
        removeBtn.className = 'remove-absence';
        removeBtn.textContent = 'Fjern';
        removeBtn.addEventListener('click', () => {
          removeAbsence(absence.id).catch((error) => {
            console.error('Kunne ikke fjerne fravær', error);
            window.alert('Kunne ikke fjerne fraværsposten.');
          });
        });
        item.appendChild(removeBtn);

        elements.absenceList.appendChild(item);
      });
  }

  async function removeAbsence(absenceId) {
    const response = await fetch(`/api/absences/${encodeURIComponent(absenceId)}`, {
      method: 'DELETE',
      credentials: 'same-origin',
    });
    if (response.status === 401) {
      handleUnauthorised();
      throw new Error('Kræver login');
    }
    if (!response.ok) {
      throw new Error('Serveren kunne ikke fjerne fraværet');
    }
    await refreshState();
  }

  function syncEmployeeSelection() {
    populateEmployeeSelect();
  }

  function handleUnauthorised() {
    setAuthenticated(false);
    hideAdminOverlay();
    openLoginOverlay();
  }

  function setAuthenticated(value) {
    isAuthenticated = Boolean(value);
    if (elements.logoutBtn) {
      elements.logoutBtn.hidden = !isAuthenticated;
    }
  }

  function formatDateRange(from, to) {
    const fromDate = toDate(from);
    const toDateValue = toDate(to);
    const formatter = new Intl.DateTimeFormat('da-DK', { day: 'numeric', month: 'long' });
    if (from === to) {
      return formatter.format(fromDate);
    }
    return `${formatter.format(fromDate)} – ${formatter.format(toDateValue)}`;
  }

  function toDate(value) {
    return new Date(`${value}T00:00:00`);
  }

  function initialsFromName(name) {
    return name
      .split(/\s+/)
      .filter(Boolean)
      .slice(0, 2)
      .map((part) => part.charAt(0).toUpperCase())
      .join('');
  }

  function capitalizeFirstLetter(text) {
    if (!text) {
      return '';
    }
    return text.charAt(0).toUpperCase() + text.slice(1);
  }
})();